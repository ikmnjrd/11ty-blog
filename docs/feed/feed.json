{
  "version": "https://jsonfeed.org/version/1",
  "title": "ikmnjrd.github.io",
  "home_page_url": "https://ikmnjrd.github.io",
  "feed_url": "https://ikmnjrd.github.io/feed/feed.json",
  "description": "ikmnjrd&#39;s blog with 11ty.",
  "author": {
    "name": "K.Ikeda",
    "url": ""
  },
  "items": [{
      "id": "https://ikmnjrd.github.io/posts/%E3%82%B9%E3%83%9E%E3%83%BC%E3%83%88%E3%81%ABfs%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%82%92%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%82%80/",
      "url": "https://ikmnjrd.github.io/posts/%E3%82%B9%E3%83%9E%E3%83%BC%E3%83%88%E3%81%ABfs%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%82%92%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%82%80/",
      "title": "スマートにfsモジュールを読み込む",
      "content_html": "<p>Node.jsで開発するとき、<code>fs</code>はかなりよく使う。<br>\nそして現在で使うときは大抵<code>Promise型</code>で使う。</p>\n<p>そんなときには次のように書くとスマート</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> promises<span class=\"token operator\">:</span> fs <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span></code></pre>\n<p>こういう書き方でもいい。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>promises<span class=\"token punctuation\">;</span></code></pre>\n<h3 id=\"%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">参考文献 <a class=\"direct-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">#</a></h3>\n<ul>\n<li><a href=\"https://github.com/vercel/next.js/blob/canary/examples/blog/scripts/gen-rss.js\">https://github.com/vercel/next.js/blob/canary/examples/blog/scripts/gen-rss.js</a></li>\n<li><a href=\"https://tech.chakapoko.com/nodejs/file/promises.html\">[Node.js]fs.promises APIの使い方</a></li>\n</ul>\n",
      "date_published": "2022-02-03T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/Neumorphism%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB/",
      "url": "https://ikmnjrd.github.io/posts/Neumorphism%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB/",
      "title": "Neumorphismサンプル",
      "content_html": "<h2 id=\"sandbox\">Sandbox <a class=\"direct-link\" href=\"#sandbox\">#</a></h2>\n<iframe src=\"https://codesandbox.io/embed/beautiful-darwin-4gf3h?fontsize=14&hidenavigation=1&theme=dark\"\n     style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n     title=\"beautiful-darwin-4gf3h\"\n     allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n     sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n   ></iframe>\n<h2 id=\"%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88\">ポイント <a class=\"direct-link\" href=\"#%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88\">#</a></h2>\n<h3 id=\"svg%E5%8C%96%E3%81%97%E3%81%9F%E6%96%87%E5%AD%97%E3%81%AB%E9%99%B0%E5%BD%B1%E3%82%92%E3%81%A4%E3%81%91%E3%82%8B\">SVG化した文字に陰影をつける <a class=\"direct-link\" href=\"#svg%E5%8C%96%E3%81%97%E3%81%9F%E6%96%87%E5%AD%97%E3%81%AB%E9%99%B0%E5%BD%B1%E3%82%92%E3%81%A4%E3%81%91%E3%82%8B\">#</a></h3>\n<p>cssではこのようにすると綺麗に抜ける。</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">svg</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token function\">drop-shadow</span><span class=\"token punctuation\">(</span>3px 3px 3px #fff<span class=\"token punctuation\">)</span><br>    <span class=\"token function\">drop-shadow</span><span class=\"token punctuation\">(</span>-3px -3px 1px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>html上では、適宜fillやstrokeを設定する。</p>\n<p><a href=\"https://danmarshall.github.io/google-font-to-svg-path/\">https://danmarshall.github.io/google-font-to-svg-path/</a>（<a href=\"https://github.com/danmarshall/google-font-to-svg-path\">GitHubリポジトリ</a>）を使って文字を事前にSVG化しておく。</p>\n<p>npmパッケージで似たものを提供している人もいる<a href=\"https://github.com/shrhdk/text-to-svg\">https://github.com/shrhdk/text-to-svg</a></p>\n",
      "date_published": "2022-02-01T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/%E5%B1%A5%E6%AD%B4%E6%9B%B8%E7%94%A8%E3%81%AE%E5%86%99%E7%9C%9F%E3%82%92%E3%83%87%E3%83%BC%E3%82%BF%E3%81%A7%E5%8F%97%E3%81%91%E5%8F%96%E3%82%8B%E6%96%B9%E6%B3%95%E3%81%BE%E3%81%A8%E3%82%81/",
      "url": "https://ikmnjrd.github.io/posts/%E5%B1%A5%E6%AD%B4%E6%9B%B8%E7%94%A8%E3%81%AE%E5%86%99%E7%9C%9F%E3%82%92%E3%83%87%E3%83%BC%E3%82%BF%E3%81%A7%E5%8F%97%E3%81%91%E5%8F%96%E3%82%8B%E6%96%B9%E6%B3%95%E3%81%BE%E3%81%A8%E3%82%81/",
      "title": "履歴書用の写真をデータで受け取る方法まとめ",
      "content_html": "<h4 id=\"%E8%A8%BC%E6%98%8E%E5%86%99%E7%9C%9F%E3%83%9C%E3%83%83%E3%82%AF%E3%82%B9\"><a href=\"https://www.fujifilm.com/jp/ja/consumer/photoprinting/photo-box\">証明写真ボックス</a> <a class=\"direct-link\" href=\"#%E8%A8%BC%E6%98%8E%E5%86%99%E7%9C%9F%E3%83%9C%E3%83%83%E3%82%AF%E3%82%B9\">#</a></h4>\n<p>おすすめ。富士フィルムがやっている証明写真機。</p>\n<p>写真機の中に入ると、「データと写真」「データのみ」「写真のみ」などから選択できる。値段は少しずつ違い、「データと写真」が1000円、「データのみ」が800円だったはず。</p>\n<p>会員登録や専用アプリのダウンロードなどの必要がない。<br>\n撮影後に発行される受付番号とパスワードで半年間ダウンロード可。</p>\n<h4 id=\"%E8%A8%BC%E6%98%8E%E5%86%99%E7%9C%9F%E6%A9%9Fki-re-i\"><a href=\"https://www.dnpphoto.jp/products/kirei/with/\">証明写真機Ki-Re-i</a> <a class=\"direct-link\" href=\"#%E8%A8%BC%E6%98%8E%E5%86%99%E7%9C%9F%E6%A9%9Fki-re-i\">#</a></h4>\n<p>専用アプリのダウンロードが必要.<br>\n「証明写真機Ki-Re-i Withスマホ」という機種でないとデータでの受け取りに対応してなくてややこしい。</p>\n<h4 id=\"%E5%9C%B0%E5%85%83%E3%81%AE%E5%86%99%E7%9C%9F%E5%B1%8B\">地元の写真屋 <a class=\"direct-link\" href=\"#%E5%9C%B0%E5%85%83%E3%81%AE%E5%86%99%E7%9C%9F%E5%B1%8B\">#</a></h4>\n<p>地元の写真屋を今まで使ってた。<br>\n自分の顔がひん曲がってるせいで、もう少し顔傾けてなどの指示がよく出て面倒くさい。<br>\nカメラマンの腕次第で写真の出来が変わる。</p>\n<p>値段は1500円くらいで高い。<br>\nCD-ROMに焼いてくれるが処分に困る。</p>\n",
      "date_published": "2022-01-31T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/GCP%E3%81%AECloudBuild%E3%81%AA%E3%82%93%E3%82%84%E3%81%AD%E3%82%93%E3%81%93%E3%81%84%E3%81%A4/",
      "url": "https://ikmnjrd.github.io/posts/GCP%E3%81%AECloudBuild%E3%81%AA%E3%82%93%E3%82%84%E3%81%AD%E3%82%93%E3%81%93%E3%81%84%E3%81%A4/",
      "title": "GCPのCloudBuildなんやねんこいつ",
      "content_html": "<h3 id=\"%E7%96%91%E5%95%8F%E3%81%AB%E9%81%AD%E9%81%87%E3%81%97%E3%81%9F%E7%8A%B6%E6%B3%81\">疑問に遭遇した状況 <a class=\"direct-link\" href=\"#%E7%96%91%E5%95%8F%E3%81%AB%E9%81%AD%E9%81%87%E3%81%97%E3%81%9F%E7%8A%B6%E6%B3%81\">#</a></h3>\n<p>最近 Cloud Run にハマってる。Cloud SDK こと gcloud コマンドで Artifact Registry(Container Registry)にアップロードしてほいっと <code>gcloud run deploy</code> ですぐにサービスが公開できて気持ちがいい。</p>\n<p>じゃあそろそろGithub ActionsでCI/CDの設定でもしようかと思ったら、サービスの概念が自分の中で咀嚼できていなかったことに気がついた。そこでの疑問は以下だ。</p>\n<h3 id=\"%E7%96%91%E5%95%8F\">疑問 <a class=\"direct-link\" href=\"#%E7%96%91%E5%95%8F\">#</a></h3>\n<p><strong>Cloud Build なんやねんこいつ</strong> である。</p>\n<p><code>google-github-actions/setup-gcloud</code> を使ってワークフローを使っていると、次のような形になる。</p>\n<pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build and Push Image<br><br><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span><br>    <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span><br>    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"*\"</span><br><br><span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">build-and-publish</span><span class=\"token punctuation\">:</span><br>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build and Push docker image<br>    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest<br><br>    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span><br>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout<br>      <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2<br>      <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span><br>        <span class=\"token key atrule\">ref</span><span class=\"token punctuation\">:</span> $<br><br>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Google Cloud<br>      <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> google<span class=\"token punctuation\">-</span>github<span class=\"token punctuation\">-</span>actions/setup<span class=\"token punctuation\">-</span>gcloud@v0<br>      <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span><br>        <span class=\"token key atrule\">service_account_key</span><span class=\"token punctuation\">:</span> $<br>        <span class=\"token key atrule\">project_id</span><span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">-</span>datastore<span class=\"token punctuation\">-</span>test<span class=\"token punctuation\">-</span><span class=\"token number\">111</span><br><br>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Configure docker for artifact registry<br>      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"><br>        gcloud auth configure-docker asia-northeast1-docker.pkg.dev</span><br><br>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> set TAG<br>      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"><br>        echo \"TAG=$(echo $GITHUB_REF | awk -F/ '{print $NF}')\" >> $GITHUB_ENV</span><br><br>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build<br>      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"><br>        docker build -t asia-northeast1-docker.pkg.dev/node-datastore-test-111/node-datastore-test-repo/node-datastore-test-image:$ ./</span><br><br>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Push<br>      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"><br>        docker push asia-northeast1-docker.pkg.dev/node-datastore-test-111/node-datastore-test-repo/node-datastore-test-image:$</span><br><br>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy<br>      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"><br>        gcloud run deploy test-service --image asia-northeast1-docker.pkg.dev/node-datastore-test-111/node-datastore-test-repo/node-datastore-test-image:$ --region asia-northeast1 --platform managed --allow-unauthenticated</span><br></code></pre>\n<p>せっかくdockerコマンドの羅列で気持ちよくなれてたのに、deployはgcloudコマンドに戻ってくる。</p>\n<p>...?<br>\nCloud Buildを挟まないとArtifact RegistryからCloud Runへデプロイできないと思い込んでいたけど、Cloud RunにデプロイするためにArtifact RegistryにビルドしたDocker Imageをアップロードしてるだけで、Cloud Buildいらんやん。。。</p>\n<p>なんやねん Cloud Build こいつは、でした。</p>\n<h3 id=\"%E5%91%A8%E8%BE%BA%E7%94%A8%E8%AA%9E\">周辺用語 <a class=\"direct-link\" href=\"#%E5%91%A8%E8%BE%BA%E7%94%A8%E8%AA%9E\">#</a></h3>\n<ul>\n<li>Github Actions</li>\n<li>Cloud SDK</li>\n<li>Cloud Build</li>\n</ul>\n<h3 id=\"%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">参考文献 <a class=\"direct-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">#</a></h3>\n<ul>\n<li><a href=\"https://cloud.google.com/artifact-registry/docs/integrate-cloud-run#command-line\">Cloud Run へのデプロイ</a></li>\n</ul>\n",
      "date_published": "2022-01-30T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/draw.io%E3%81%A7%E4%BD%9C%E3%82%8B%E6%8A%80%E8%A1%93%E8%B3%87%E6%96%99%E3%81%AB%E4%BD%BF%E3%81%86%E3%83%84%E3%83%BC%E3%83%AB%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3/",
      "url": "https://ikmnjrd.github.io/posts/draw.io%E3%81%A7%E4%BD%9C%E3%82%8B%E6%8A%80%E8%A1%93%E8%B3%87%E6%96%99%E3%81%AB%E4%BD%BF%E3%81%86%E3%83%84%E3%83%BC%E3%83%AB%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3/",
      "title": "draw.ioで作る技術資料に使うツールアイコン",
      "content_html": "<h3 id=\"%E3%81%BE%E3%81%9A%E3%81%AF%E6%A4%9C%E7%B4%A2\">まずは検索 <a class=\"direct-link\" href=\"#%E3%81%BE%E3%81%9A%E3%81%AF%E6%A4%9C%E7%B4%A2\">#</a></h3>\n<p>検索してみる。<br>\n<img src=\"https://i.gyazo.com/d68e020225a55e471084351f8512ad1c.png\" alt=\"draw.io検索\"></p>\n<p>draw.ioで<code>https://~</code>を参照する形で読み込んでしまうとエクスポート時に画像が表示されないので注意。</p>\n<h3 id=\"%E6%A4%9C%E7%B4%A2%E3%81%97%E3%81%A6%E3%81%AA%E3%81%84%E3%81%AA%E3%82%89\">検索してないなら <a class=\"direct-link\" href=\"#%E6%A4%9C%E7%B4%A2%E3%81%97%E3%81%A6%E3%81%AA%E3%81%84%E3%81%AA%E3%82%89\">#</a></h3>\n<p><a href=\"https://qiita.com/tkit/items/932316c5f5f7b162b61e\">いい感じにまとめてくれているQiita記事</a></p>\n<h3 id=\"%E4%BD%95%E3%81%8C%E3%81%AA%E3%82%93%E3%81%A7%E3%82%82%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3%E3%82%92%E4%BD%BF%E3%81%84%E3%81%9F%E3%81%84\">何がなんでもアイコンを使いたい <a class=\"direct-link\" href=\"#%E4%BD%95%E3%81%8C%E3%81%AA%E3%82%93%E3%81%A7%E3%82%82%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3%E3%82%92%E4%BD%BF%E3%81%84%E3%81%9F%E3%81%84\">#</a></h3>\n<p><a href=\"https://vecta.io/symbols\">https://vecta.io/symbols</a></p>\n<h3 id=\"svg%E3%81%A7%E3%82%82%E3%81%84%E3%81%84%E3%81%AA%E3%82%89\">svgでもいいなら <a class=\"direct-link\" href=\"#svg%E3%81%A7%E3%82%82%E3%81%84%E3%81%84%E3%81%AA%E3%82%89\">#</a></h3>\n<p><a href=\"https://devicon.dev/\">https://devicon.dev/</a></p>\n",
      "date_published": "2022-01-28T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/Docker%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B%E3%83%AD%E3%82%B0%E8%A1%A8%E7%A4%BA/",
      "url": "https://ikmnjrd.github.io/posts/Docker%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B%E3%83%AD%E3%82%B0%E8%A1%A8%E7%A4%BA/",
      "title": "Dockerにおけるログ表示",
      "content_html": "<h3 id=\"%E5%8D%98%E4%BD%93%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E7%94%A8\">単体コンテナ用 <a class=\"direct-link\" href=\"#%E5%8D%98%E4%BD%93%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E7%94%A8\">#</a></h3>\n<p><code>docker logs -f --tail=100 &lt;container-name&gt;</code></p>\n<h3 id=\"docker-compose%E7%94%A8\">docker compose用 <a class=\"direct-link\" href=\"#docker-compose%E7%94%A8\">#</a></h3>\n<p><code>docker compose logs -f --tail=10</code></p>\n<h3 id=\"%E5%8F%82%E8%80%83\">参考 <a class=\"direct-link\" href=\"#%E5%8F%82%E8%80%83\">#</a></h3>\n<ul>\n<li><a href=\"https://qiita.com/nitaking/items/4ca215b95cef2ad5e958\">Dockerのログが大きくなりすぎたから最新のだけ見たい</a></li>\n<li><a href=\"https://docs.docker.com/compose/reference/logs/\">docker-compose logs</a></li>\n</ul>\n",
      "date_published": "2022-01-26T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/%E7%96%91%E5%95%8F_%E3%81%AA%E3%81%9Cvar%E3%81%A8const%E3%81%8C%E5%85%B1%E5%AD%98%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%81%AE%E3%81%8B/",
      "url": "https://ikmnjrd.github.io/posts/%E7%96%91%E5%95%8F_%E3%81%AA%E3%81%9Cvar%E3%81%A8const%E3%81%8C%E5%85%B1%E5%AD%98%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%81%AE%E3%81%8B/",
      "title": "疑問_なぜvarとconstが共存しているのか",
      "content_html": "<h3 id=\"%E7%96%91%E5%95%8F%E3%81%AB%E9%81%AD%E9%81%87%E3%81%97%E3%81%9F%E7%8A%B6%E6%B3%81\">疑問に遭遇した状況 <a class=\"direct-link\" href=\"#%E7%96%91%E5%95%8F%E3%81%AB%E9%81%AD%E9%81%87%E3%81%97%E3%81%9F%E7%8A%B6%E6%B3%81\">#</a></h3>\n<p>Next.jsで<code>$ next export</code>が気になり、<code>~/node_modules/next/dist/cli/next-export.js</code>を見ていた。</p>\n<h3 id=\"%E7%96%91%E5%95%8F\">疑問 <a class=\"direct-link\" href=\"#%E7%96%91%E5%95%8F\">#</a></h3>\n<p>グローバル宣言している<code>var</code>とES2015(ES6)から追加された<code>const</code>と<code>let</code>が共存している。なぜ？？</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token hashbang comment\">#!/usr/bin/env node</span><br><span class=\"token string\">\"use strict\"</span><span class=\"token punctuation\">;</span><br>Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>exports<span class=\"token punctuation\">,</span> <span class=\"token string\">\"__esModule\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br>    value<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>exports<span class=\"token punctuation\">.</span>nextExport <span class=\"token operator\">=</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">var</span> _path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">var</span> _fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">var</span> _indexJs <span class=\"token operator\">=</span> <span class=\"token function\">_interopRequireDefault</span><span class=\"token punctuation\">(</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"next/dist/compiled/arg/index.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">var</span> _export <span class=\"token operator\">=</span> <span class=\"token function\">_interopRequireDefault</span><span class=\"token punctuation\">(</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../export\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">var</span> _utils <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../server/lib/utils\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">var</span> _trace <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../trace\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">var</span> _isError <span class=\"token operator\">=</span> <span class=\"token function\">_interopRequireDefault</span><span class=\"token punctuation\">(</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../lib/is-error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">var</span> _getProjectDir <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../lib/get-project-dir\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">function</span> <span class=\"token function\">_interopRequireDefault</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> obj <span class=\"token operator\">&amp;&amp;</span> obj<span class=\"token punctuation\">.</span>__esModule <span class=\"token operator\">?</span> obj <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> obj<br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">nextExport</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">argv</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> nextExportCliSpan <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> _trace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'next-export-cli'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">const</span> validArgs <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token comment\">// Types</span><br>        <span class=\"token string\">'--help'</span><span class=\"token operator\">:</span> Boolean<span class=\"token punctuation\">,</span><br>        <span class=\"token string\">'--silent'</span><span class=\"token operator\">:</span> Boolean<span class=\"token punctuation\">,</span><br>        <span class=\"token string\">'--outdir'</span><span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span><br>        <span class=\"token string\">'--threads'</span><span class=\"token operator\">:</span> Number<span class=\"token punctuation\">,</span><br>        <span class=\"token comment\">// Aliases</span><br>        <span class=\"token string\">'-h'</span><span class=\"token operator\">:</span> <span class=\"token string\">'--help'</span><span class=\"token punctuation\">,</span><br>        <span class=\"token string\">'-s'</span><span class=\"token operator\">:</span> <span class=\"token string\">'--silent'</span><span class=\"token punctuation\">,</span><br>        <span class=\"token string\">'-o'</span><span class=\"token operator\">:</span> <span class=\"token string\">'--outdir'</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">let</span> args<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span><br>        args <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> _indexJs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">default</span><span class=\"token punctuation\">(</span>validArgs<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br>            argv<br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> _isError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">default</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> error<span class=\"token punctuation\">.</span>code <span class=\"token operator\">===</span> <span class=\"token string\">'ARG_UNKNOWN_OPTION'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> _utils<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">printAndExit</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><br>        <span class=\"token keyword\">throw</span> error<span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token string\">'--help'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>      Description<br>        Exports the application for production deployment<br><br>      Usage<br>        $ next export [options] &lt;dir><br><br>      &lt;dir> represents the directory of the Next.js application.<br>      If no directory is provided, the current directory will be used.<br><br>      Options<br>        -h - list this help<br>        -o - set the output dir (defaults to 'out')<br>        -s - do not print any messages to console<br>    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        process<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">const</span> dir <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> _getProjectDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProjectDir</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>_<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token comment\">// Check if pages dir exists and warn if not</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> _fs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">existsSync</span><span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> _utils<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">printAndExit</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">> No such directory exists as the project root: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>dir<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">const</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br>        silent<span class=\"token operator\">:</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'--silent'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><br>        threads<span class=\"token operator\">:</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'--threads'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>        outdir<span class=\"token operator\">:</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'--outdir'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> _path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token string\">'--outdir'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> _path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">,</span> <span class=\"token string\">'out'</span><span class=\"token punctuation\">)</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> _export<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">default</span><span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">,</span> nextExportCliSpan<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span><br>        nextExportCliSpan<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> _utils<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">printAndExit</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Export successful. Files written to </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>options<span class=\"token punctuation\">.</span>outdir<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span><br>        nextExportCliSpan<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> _utils<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">printAndExit</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>exports<span class=\"token punctuation\">.</span>nextExport <span class=\"token operator\">=</span> nextExport<span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">//# sourceMappingURL=next-export.js.map</span></code></pre>\n<h3 id=\"%E5%91%A8%E8%BE%BA%E7%94%A8%E8%AA%9E\">周辺用語 <a class=\"direct-link\" href=\"#%E5%91%A8%E8%BE%BA%E7%94%A8%E8%AA%9E\">#</a></h3>\n<ul>\n<li>Next.js</li>\n<li>ESModules</li>\n<li>CommonJS</li>\n</ul>\n<h3 id=\"%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">参考文献 <a class=\"direct-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">#</a></h3>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\">MDN - Object.defineProperty()</a></li>\n<li><a href=\"https://ja.javascript.info/modules-intro\">javascript.info - モジュール, 導入</a></li>\n</ul>\n",
      "date_published": "2022-01-23T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/Notion%E3%81%A7Markdown%E7%9A%84%E3%81%AB%E7%94%BB%E5%83%8F%E3%82%92%E5%9F%8B%E3%82%81%E8%BE%BC%E3%82%80%EF%BC%88w:Gyazo%EF%BC%89/",
      "url": "https://ikmnjrd.github.io/posts/Notion%E3%81%A7Markdown%E7%9A%84%E3%81%AB%E7%94%BB%E5%83%8F%E3%82%92%E5%9F%8B%E3%82%81%E8%BE%BC%E3%82%80%EF%BC%88w:Gyazo%EF%BC%89/",
      "title": "NotionでMarkdown記法的に画像を埋め込む（w/Gyazo）",
      "content_html": "<h3 id=\"%E7%B5%90%E8%AB%96\">結論 <a class=\"direct-link\" href=\"#%E7%B5%90%E8%AB%96\">#</a></h3>\n<p><strong>画像ファイル自体のリンクをNotionに貼り付ける</strong></p>\n<p><img src=\"https://i.gyazo.com/7046c2a8fa7d00ff1cf6feb1503ce36c.png\" alt=\"Notion埋め込み例\"></p>\n<h3 id=\"%E5%89%8D%E6%8F%90\">前提 <a class=\"direct-link\" href=\"#%E5%89%8D%E6%8F%90\">#</a></h3>\n<p>私は画像を自身のブログに書くときなどにGyazo（スクリーショットの共有アプリ）を利用しています。</p>\n<p>手元のテキストファイル（マークダウンファイル）として残しておく際には、<code>![hoge](url)</code>の記法で十分なのですが、Notionアプリ上でこの記法を使ってもそのまま画像を表示してくれません。</p>\n<p>Gyazoを知らない人向けのイメージ画像。Gyazoを使ってスクリーンショットを撮ると、自動的にGyazoのクラウドサーバー（GCPを利用しているらしい）にアップロードされ、公開される。<br>\n<img src=\"https://i.gyazo.com/34240519a32ac82716681aa70ef518fe.png\" alt=\"Gyazo画像\"></p>\n<h3 id=\"%E4%BD%9C%E6%A5%AD%E3%81%AE%E6%B5%81%E3%82%8C%E3%81%AE%E4%BE%8B\">作業の流れの例 <a class=\"direct-link\" href=\"#%E4%BD%9C%E6%A5%AD%E3%81%AE%E6%B5%81%E3%82%8C%E3%81%AE%E4%BE%8B\">#</a></h3>\n<p>Gyazoを利用して取得できるURL例:<br>\n<a href=\"https://gyazo.com/34240519a32ac82716681aa70ef518fe\">https://gyazo.com/34240519a32ac82716681aa70ef518fe</a></p>\n<p>Gyazoから自動的に与えられるURLをNotionに貼り付け(「Create bookmark」 「Create embed」を選択し)ても画像を綺麗に貼り付けられない。<br>\n<img src=\"https://i.gyazo.com/2f272328bf161c206970d572583f7b50.png\" alt=\"失敗例\"><br>\n↓<br>\n<img src=\"https://i.gyazo.com/26e64715a416362727c04054857d25d8.png\" alt=\"続・失敗例\"></p>\n<p>Gyazoを使って生成されるリンクは、余分なWebページ情報が多く含まれている。そのためURLを次のようにしてからNotionに貼り付ける。<br>\n加工例（i.と拡張子.pngをつける）:<br>\nhttps://<code>i.</code><a href=\"http://gyazo.com/34240519a32ac82716681aa70ef518fe\">gyazo.com/34240519a32ac82716681aa70ef518fe</a><code>.png</code></p>\n<p>Notionに加工したURLを貼り付けると「Emged image」というオブションが選択できるので、選択すれば画像が埋め込まれる。<br>\n<img src=\"https://i.gyazo.com/ef946f57d0800ca06f337425f98ec6fe.png\" alt=\"成功例\"></p>\n",
      "date_published": "2022-01-23T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/%E7%96%91%E5%95%8F_script%E3%82%BF%E3%82%B0%E3%81%AEcsp-hash%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%86%E3%82%A3%E3%83%96%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/",
      "url": "https://ikmnjrd.github.io/posts/%E7%96%91%E5%95%8F_script%E3%82%BF%E3%82%B0%E3%81%AEcsp-hash%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%86%E3%82%A3%E3%83%96%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/",
      "title": "疑問メモ_scriptタグのcsp-hashディレクティブについて",
      "content_html": "<h3 id=\"%E7%96%91%E5%95%8F%E3%81%AB%E9%81%AD%E9%81%87%E3%81%97%E3%81%9F%E7%8A%B6%E6%B3%81\">疑問に遭遇した状況 <a class=\"direct-link\" href=\"#%E7%96%91%E5%95%8F%E3%81%AB%E9%81%AD%E9%81%87%E3%81%97%E3%81%9F%E7%8A%B6%E6%B3%81\">#</a></h3>\n<p>ネットサーフィンをしていて<code>&lt;head/&gt;</code>を覗いていた</p>\n<h3 id=\"%E7%96%91%E5%95%8F\">疑問 <a class=\"direct-link\" href=\"#%E7%96%91%E5%95%8F\">#</a></h3>\n<p>csp-hashディレクティブって何？なんのために使うの？</p>\n<p>どうもcspは Content-Security-Policy の略っぽい。</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">csp-hash</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">Mac OS X</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>navigator<span class=\"token punctuation\">.</span>userAgent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">)</span><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>このブログがわかりやすかった気がしたが、わからなかった。<a href=\"https://techblog.securesky-tech.com/entry/2020/05/21/\">CSP(コンテンツセキュリティポリシー)について調べてみた - SSTエンジニアブログ</a></p>\n<h3 id=\"%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">参考文献 <a class=\"direct-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">#</a></h3>\n<ul>\n<li><a href=\"https://www.patterns.dev/\">patterns.dev</a></li>\n<li><a href=\"https://techblog.securesky-tech.com/entry/2020/05/21/\">CSP(コンテンツセキュリティポリシー)について調べてみた - SSTエンジニアブログ</a></li>\n</ul>\n",
      "date_published": "2022-01-19T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/Jekyll%20Tipue%20Search%E3%81%AB%E3%82%88%E3%82%8B%E8%A8%98%E4%BA%8B%E6%A4%9C%E7%B4%A2%E3%81%AE%E5%B0%8E%E5%85%A5%E6%96%B9%E6%B3%95/",
      "url": "https://ikmnjrd.github.io/posts/Jekyll%20Tipue%20Search%E3%81%AB%E3%82%88%E3%82%8B%E8%A8%98%E4%BA%8B%E6%A4%9C%E7%B4%A2%E3%81%AE%E5%B0%8E%E5%85%A5%E6%96%B9%E6%B3%95/",
      "title": "Jekyll Tipue Searchによる記事検索の導入方法",
      "content_html": "<p>Github Pagesで手軽にブログを作成する際に第一候補となるであろうStatic Site Generator「Jekyll」に自作ブログ内検索を手軽に導入する方法について記述します。</p>\n<p><img src=\"https://gyazo.com/9f18a04650fb3bfaef972a88a25a00f2.png\" alt=\"完成イメージ図\"></p>\n<h3 id=\"%E6%BA%96%E5%82%99%E3%81%99%E3%82%8B%E3%82%82%E3%81%AE\">準備するもの <a class=\"direct-link\" href=\"#%E6%BA%96%E5%82%99%E3%81%99%E3%82%8B%E3%82%82%E3%81%AE\">#</a></h3>\n<ul>\n<li>すでに公開設定などを済ませたJekyll製ブログ</li>\n</ul>\n<h3 id=\"%E6%89%8B%E9%A0%86\">手順 <a class=\"direct-link\" href=\"#%E6%89%8B%E9%A0%86\">#</a></h3>\n<ol>\n<li>以下に示すソースコード（./assets）をダウンロードします。</li>\n</ol>\n<p><a href=\"https://github.com/jekylltools/jekyll-tipue-search/archive/refs/heads/master.zip\">ソースコード(d4b5df7).zip</a></p>\n<blockquote>\n<p><a href=\"https://github.com/jekylltools/jekyll-tipue-search\">公式GitHubリポジトリ</a>は2017年8月23日より新規コミットがないので、以下に直接zipのリンクを掲載しています。</p>\n</blockquote>\n<ol start=\"2\">\n<li>解凍し、自身のブログのソースコードにassetsフォルダの中身を丸ごとコピーします。</li>\n</ol>\n<p><img src=\"https://i.gyazo.com/e8456b0e9178d920970dcc32c088b62a.png\" alt=\"image1\"><br>\n<img src=\"https://i.gyazo.com/b1c5d6ca798cf6851b5b17db17b09e8e.png\" alt=\"image2\"></p>\n<ol start=\"3\">\n<li>利用しているテーマでheadタグを規定している部分に以下のソースコードを追記する。\n<ul>\n<li>筆者の環境だと<a href=\"https://github.com/jekyll/minima\">minima</a>を利用しているので、<code>_includes/custom-head.html</code>が本手順の作業対象になります。</li>\n</ul>\n</li>\n</ol>\n<p><a href=\"https://github.com/jekylltools/jekyll-tipue-search\">ソース</a></p>\n<p><img src=\"https://i.gyazo.com/a75a11a735f7db802a1f1eaccabebad3.png\" alt=\"image3\"></p>\n<ol>\n<li>以下に示すコードを<code>search.html</code>としてコピペし、画像のように配置します。\n<ul>\n<li><a href=\"https://github.com/jekyll/minima\">minima</a>であれば、統一感を持たせるためにファイル名<code>search.md</code>とするのが綺麗な気がするので、私は<code>search.md</code>としています。</li>\n</ul>\n</li>\n</ol>\n<p><a href=\"https://github.com/jekylltools/jekyll-tipue-search\">ソース</a></p>\n<p><img src=\"https://gyazo.com/e83c01861fea2707147a8970e8f31784.png\" alt=\"image4\"></p>\n<ol start=\"5\">\n<li>あとは<code>_config.yml</code>をいじるなりしてヘッダー部分にパーマリンクを設置したり、CSSを少し変えてみたり、ビルド、デプロイをすれば完了です。\n<ul>\n<li>よろしければ<a href=\"https://github.com/ikmnjrd/ikmnjrd.github.io\">筆者の公開リポジトリ</a>を参考にしてみてください。</li>\n</ul>\n</li>\n</ol>\n<p>完成です。</p>\n<p><img src=\"https://i.gyazo.com/82a80325376d64d4e4560fc0b924881f.png\" alt=\"完成\"></p>\n",
      "date_published": "2022-01-18T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%82%AD%E3%83%A3%E3%83%97%E3%83%81%E3%83%A3%E3%83%AA%E3%83%B3%E3%82%B0%E3%81%A8%E3%83%90%E3%83%96%E3%83%AA%E3%83%B3%E3%82%B0%EF%BC%88React%EF%BC%89/",
      "url": "https://ikmnjrd.github.io/posts/%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%82%AD%E3%83%A3%E3%83%97%E3%83%81%E3%83%A3%E3%83%AA%E3%83%B3%E3%82%B0%E3%81%A8%E3%83%90%E3%83%96%E3%83%AA%E3%83%B3%E3%82%B0%EF%BC%88React%EF%BC%89/",
      "title": "イベントキャプチャリングとバブリング（React）",
      "content_html": "<p>Reactはあまり関係ないです。</p>\n<p>筆者はReactからWebの世界に入ったため、Reactの世界観からWeb標準技術を見ることが多いですが、Reactのドキュメントを読んでいるとWeb標準なのかReactの世界の話なのかがよくわからないまま進んでしまいます。そんな状況だったので、JavaScriptの勉強を改めてしていたところに「Reactをやっていて出てきた言葉だけど、なんかよくわからないからスルーしたやつだ！」と再会を果たしたので記念にこの記事を書いています。</p>\n<h3 id=\"%E4%BE%8B%E9%A1%8C\">例題 <a class=\"direct-link\" href=\"#%E4%BE%8B%E9%A1%8C\">#</a></h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Hoge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><br>    <span class=\"token operator\">&lt;</span>div onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><br>      <span class=\"token operator\">&lt;</span>p onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">></span>pだよ<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span><br>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>作成した<code>&lt;p/&gt;</code>をクリックすると次のようになります。これが何気なく目にしている挙動と書き方だと思います。</p>\n<p><img src=\"https://i.gyazo.com/63f658d09ff5f2711823f9e01fc1c2a1.png\" alt=\"実行結果1\"></p>\n<p>次に<code>onClickCapture</code>という属性からconsole.logで結果を出力してみましょう。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Hoge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><br>    <span class=\"token operator\">&lt;</span>div onClickCapture<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><br>      <span class=\"token operator\">&lt;</span>p onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">></span>pだよ<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span><br>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>console.logで出力される順序が変わりました。</p>\n<p><img src=\"https://i.gyazo.com/3fb88bf4ba65dbc23410e35d38cf89d9.png\" alt=\"実行結果2\"></p>\n<p>これはWEBの標準仕様、DOMのイベントフローに基づいた仕様なのでvanillaJSであろうが、Reactであろうが元の考え方は一緒です。</p>\n<h3 id=\"%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%83%95%E3%83%AD%E3%83%BC\">イベントフロー <a class=\"direct-link\" href=\"#%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%83%95%E3%83%AD%E3%83%BC\">#</a></h3>\n<p><code>キャプチャリングフェーズ</code> 親から子へイベントを見ていく処理<br>\n|<br>\n<code>ターゲットフェーズ</code> 発生源の要素に到達した後、その要素自体の処理<br>\n|<br>\n<code>バブリングフェーズ</code> 発生源から親へイベントを見ていく段階<br>\n参考: <a href=\"https://www.w3.org/TR/DOM-Level-3-Events/#event-flow\">https://www.w3.org/TR/DOM-Level-3-Events/#event-flow</a></p>\n<h3 id=\"javascript%E3%81%A8react\">JavaScriptとReact <a class=\"direct-link\" href=\"#javascript%E3%81%A8react\">#</a></h3>\n<p>JavaScriptではaddEventListenrで初心者的に何も意識せずにイベントを追加すると、バブリングフェーズでイベントが発火します。</p>\n<p>Reactでも通常、ほとんどのイベントでバブリングフェーズで発火します。</p>\n<blockquote>\n<p>以下のイベントハンドラはイベント伝搬のバブリングフェーズで呼び出されます。キャプチャフェーズのイベントハンドラを登録するには、イベント名に Capture を追加します。たとえば、キャプチャフェーズでクリックイベントを処理するには onClick の代わりに onClickCapture を使用します。</p>\n</blockquote>\n<h3 id=\"addeventlistener%E3%81%AE%E7%AC%AC3%E5%BC%95%E6%95%B0%EF%BC%88%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%EF%BC%89\">addEventListenerの第3引数（オプション） <a class=\"direct-link\" href=\"#addeventlistener%E3%81%AE%E7%AC%AC3%E5%BC%95%E6%95%B0%EF%BC%88%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%EF%BC%89\">#</a></h3>\n<p>第3引数にあたるものは<code>options</code>、もしくは<code>useCapture</code>のプロパティです。構造上、第3引数に急にBoolean(true/false)が現れたら、useCapture属性のことです。<br>\n以下に引用したMDNの小難しく感じる文章もそこそこ理解できるようになったのではないでしょうか。</p>\n<ul>\n<li>options\n<ul>\n<li>capture\n<ul>\n<li>Boolean値で、この型のイベントがDOMツリーで下に位置するEventTargetに配信dispatchされる前に、登録されたlistenerに配信されることを示します。</li>\n</ul>\n</li>\n<li>once\n<ul>\n<li>Boolean値で、listenerの呼び出しを一回のみのとしたいかどうかを値で指定します。trueを指定すると、listenerは一度実行された時に自動的に削除されます。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>useCapture\n<ul>\n<li>Boolean値で、この型のイベントが、DOMツリー内の下のEventTargetに配信される前に、登録されたlistenerに配信されるかどうかを示します。ツリーを上方向にバブリングしているイベントは、キャプチャーを使用するように指定されたリスナーを起動しません。イベントのバブリングとキャプチャーは、両方の要素がそのイベントのハンドラーを登録している場合に、別の要素内に入れ子になっている要素で発生するイベントを伝播する2つの方法です。イベント伝播モードは、要素がイベントを受け取る順番を決定します。詳細な説明は DOM Level 3 Events と JavaScript Event order を参照してください。指定されていない場合、useCaptureは既定でfalseとなります。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"%E5%8F%82%E8%80%83\">参考 <a class=\"direct-link\" href=\"#%E5%8F%82%E8%80%83\">#</a></h3>\n<ul>\n<li><a href=\"https://uhyohyo.net/javascript/3_4.html\">https://uhyohyo.net/javascript/3_4.html</a></li>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/API/EventTarget/addEventListener\">https://developer.mozilla.org/ja/docs/Web/API/EventTarget/addEventListener</a></li>\n<li><a href=\"https://ja.reactjs.org/docs/events.html\">https://ja.reactjs.org/docs/events.html</a></li>\n<li><a href=\"https://ja.reactjs.org/blog/2020/08/10/react-v17-rc.html#no-event-pooling\">https://ja.reactjs.org/blog/2020/08/10/react-v17-rc.html#no-event-pooling</a></li>\n</ul>\n",
      "date_published": "2022-01-17T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/Mac%E3%81%A7%E3%82%AA%E3%83%B3%E3%83%A9%E3%82%A4%E3%83%B3%E4%BC%9A%E8%AD%B0%E3%82%92%E6%96%87%E5%AD%97%E8%B5%B7%E3%81%93%E3%81%97/",
      "url": "https://ikmnjrd.github.io/posts/Mac%E3%81%A7%E3%82%AA%E3%83%B3%E3%83%A9%E3%82%A4%E3%83%B3%E4%BC%9A%E8%AD%B0%E3%82%92%E6%96%87%E5%AD%97%E8%B5%B7%E3%81%93%E3%81%97/",
      "title": "Macでオンライン会議を文字起こし",
      "content_html": "<h3 id=\"%E8%AA%BF%E6%9F%BB\">調査 <a class=\"direct-link\" href=\"#%E8%AA%BF%E6%9F%BB\">#</a></h3>\n<p><a href=\"https://github.com/ExistentialAudio/BlackHole\">Blackhole</a>や<a href=\"https://apps.apple.com/jp/app/ladiocast/id411213048\">ladiocast</a>を使って録音した音声を文字起こしする方法がよく紹介されている。</p>\n<p>リアルタイムでGoogle Docs上に文字起こしをしたかったが、Blackholeとlaidiocastでは実現できず。</p>\n<h3 id=\"%E7%84%A1%E6%96%99%E3%81%A7%E4%BD%BF%E3%81%88%E3%82%8B%E3%83%AA%E3%82%A2%E3%83%AB%E3%82%BF%E3%82%A4%E3%83%A0%E6%96%87%E5%AD%97%E8%B5%B7%E3%81%93%E3%81%97%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9\">無料で使えるリアルタイム文字起こしサービス <a class=\"direct-link\" href=\"#%E7%84%A1%E6%96%99%E3%81%A7%E4%BD%BF%E3%81%88%E3%82%8B%E3%83%AA%E3%82%A2%E3%83%AB%E3%82%BF%E3%82%A4%E3%83%A0%E6%96%87%E5%AD%97%E8%B5%B7%E3%81%93%E3%81%97%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9\">#</a></h3>\n<ul>\n<li>Texta</li>\n<li>Sloos</li>\n<li>AI GIJIROKU</li>\n</ul>\n<h3 id=\"%E5%80%8B%E4%BA%BA%E7%9A%84%E3%81%AA%E7%B5%90%E8%AB%96\">個人的な結論 <a class=\"direct-link\" href=\"#%E5%80%8B%E4%BA%BA%E7%9A%84%E3%81%AA%E7%B5%90%E8%AB%96\">#</a></h3>\n<p>普段のメモなどをGoogle Docsで管理しているため、Google Docsをマストとする。<br>\nそのためGoogle MeetやZoomを簡単に録音したい。<br>\n以上の理由から、<a href=\"https://github.com/ExistentialAudio/BlackHole\">Blackhole</a>と<a href=\"https://apps.apple.com/jp/app/ladiocast/id411213048\">ladiocast</a>で録音データをGoogle Docsに文字起こしする方式で、<br>\n録音自体を<a href=\"https://krisp.ai/\">Krisp</a>（ノイズ除去ソフト）で提供されている録音機能を使う。</p>\n",
      "date_published": "2022-01-17T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/%E6%AD%B4%E4%BB%A3ECMAScript%E4%BB%95%E6%A7%98%E6%83%85%E5%A0%B1%E3%81%AE%E3%81%BE%E3%81%A8%E3%82%81/",
      "url": "https://ikmnjrd.github.io/posts/%E6%AD%B4%E4%BB%A3ECMAScript%E4%BB%95%E6%A7%98%E6%83%85%E5%A0%B1%E3%81%AE%E3%81%BE%E3%81%A8%E3%82%81/",
      "title": "歴代ECMAScript仕様情報のまとめ",
      "content_html": "<h3 id=\"%E3%81%BE%E3%81%A8%E3%82%81\">まとめ <a class=\"direct-link\" href=\"#%E3%81%BE%E3%81%A8%E3%82%81\">#</a></h3>\n<p>ここを見ろ</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/JavaScript/Language_Resources\">https://developer.mozilla.org/ja/docs/Web/JavaScript/Language_Resources</a></li>\n</ul>\n<p>GitHubリポジトリや公式ページは過去の仕様が見辛い</p>\n<ul>\n<li><a href=\"https://github.com/tc39/ecma262\">https://github.com/tc39/ecma262</a></li>\n<li><a href=\"https://tc39.es/\">https://tc39.es/</a></li>\n</ul>\n",
      "date_published": "2022-01-16T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/WeakMap%E3%81%AE%E4%BD%BF%E3%81%84%E6%89%80/",
      "url": "https://ikmnjrd.github.io/posts/WeakMap%E3%81%AE%E4%BD%BF%E3%81%84%E6%89%80/",
      "title": "WeakMapの使い所",
      "content_html": "<h3 id=\"weakmap%E3%81%A8%E3%81%AF\">WeakMapとは <a class=\"direct-link\" href=\"#weakmap%E3%81%A8%E3%81%AF\">#</a></h3>\n<p>ES2015で追加された仕様。ハッシュテーブルの一種。<br>\nMDNには以下のように書かれています。</p>\n<blockquote>\n<p>The WeakMap object is a collection of key/value pairs in which the keys are weakly referenced.</p>\n</blockquote>\n<p><code>weakly referenced keys</code>(弱い参照) という概念がキモ。</p>\n<p>似たオブジェクトとの一番わかりやすい違いが、キーにすることができるデータ型です。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">オブジェクト</th>\n<th style=\"text-align:left\">プロパティキーにできるもの</th>\n<th style=\"text-align:left\">値にできるもの</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">WeakMap</td>\n<td style=\"text-align:left\">Object</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Object</td>\n<td style=\"text-align:left\">文字列, Symbol</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Map</td>\n<td style=\"text-align:left\">関数、オブジェクト、あらゆるプリミティブなど</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n</tbody>\n</table>\n<p>ちなみにArray型（配列）は、キーバリューのかたち（キー付きコレクション）ではないです。逆にArrayやInt8Arrayなどは索引付きコレクションと呼ばれています。<a href=\"https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects\">参考:「標準組み込みオブジェクト」</a></p>\n<p>上の表を見た個人的感想はWeakMapはObjectと似ているな、と思うので今回の比較に用いていきたいと思います。</p>\n<h3 id=\"object%E3%81%A8%E3%81%AE%E9%81%95%E3%81%84%E3%80%81%E4%BD%BF%E3%81%84%E5%88%86%E3%81%91\">Objectとの違い、使い分け <a class=\"direct-link\" href=\"#object%E3%81%A8%E3%81%AE%E9%81%95%E3%81%84%E3%80%81%E4%BD%BF%E3%81%84%E5%88%86%E3%81%91\">#</a></h3>\n<p>雑な説明ですが、JavaScriptではプロトタイプチェーンの仕組みにより、新しいオブジェクトを作ると元にしたオブジェクトを参照しながらメモリに保持されます。</p>\n<blockquote>\n<p>キーによるオブジェクト参照は弱く保持され、そのオブジェクトへの参照が他に存在しないときはガベージコレクション (GC) の対象になります（出典: <a href=\"https://developer.mozilla.org/ja/docs/Web/JavaScript/Guide/Keyed_collections#weakmap_object\">MDN-キー付きコレクション</a>）</p>\n</blockquote>\n<p>これが&quot;弱い参照&quot;とされる理由の一つです。</p>\n<blockquote>\n<p>Map オブジェクトとの違いの１つは、WeakMap のキーは列挙可能ではないことです（すなわち、キーのリストを取得するメソッドがありません）。もしも列挙可能であれば、リストは非決定性をもたらす、ガベージコレクションの状態に依存することになってしまいます。（出典: <a href=\"https://developer.mozilla.org/ja/docs/Web/JavaScript/Guide/Keyed_collections#weakmap_object\">MDN-キー付きコレクション</a>）</p>\n</blockquote>\n<h3 id=\"%E4%BD%BF%E3%81%84%E6%96%B9%E3%81%AE%E4%BE%8B\">使い方の例 <a class=\"direct-link\" href=\"#%E4%BD%BF%E3%81%84%E6%96%B9%E3%81%AE%E4%BE%8B\">#</a></h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token comment\">// HTMLMediaElement用</span><br>  <span class=\"token keyword\">var</span> audioEle<span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">var</span> wm <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WeakMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/* 〜中略〜 */</span><br><br>  <span class=\"token comment\">// WeakMapでHTMLMediaElementを保持する</span><br>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>wm<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span>audioEle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    audioSourceNode <span class=\"token operator\">=</span> wm<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>audioEle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><br>    audioSourceNode <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createMediaElementSource</span><span class=\"token punctuation\">(</span>audioEle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    wm<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>audioEle<span class=\"token punctuation\">,</span> audioSourceNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span></code></pre>\n<p>出典:<a href=\"https://github.com/TakeshiOkamoto/waveform-spectrum/blob/master/waveform-spectrum.js\">https://github.com/TakeshiOkamoto/waveform-spectrum/blob/master/waveform-spectrum.js</a></p>\n<h3 id=\"%E5%8F%82%E8%80%83\">参考 <a class=\"direct-link\" href=\"#%E5%8F%82%E8%80%83\">#</a></h3>\n<ul>\n<li><a href=\"https://262.ecma-international.org/#sec-weakmap-objects\">WeakMap Objects-sec</a></li>\n<li><a href=\"https://github.com/tc39/ecma262-6-src\">tc39-GitHub</a></li>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\">MDN</a></li>\n<li><a href=\"https://uhyohyo.net/javascript/16_1.html\">https://uhyohyo.net/javascript/16_1.html</a></li>\n<li><a href=\"https://github.com/TakeshiOkamoto/waveform-spectrum/blob/master/waveform-spectrum.js\">https://github.com/TakeshiOkamoto/waveform-spectrum/blob/master/waveform-spectrum.js</a></li>\n</ul>\n",
      "date_published": "2022-01-16T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/CSS%E3%82%A2%E3%83%8B%E3%83%A1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%A7%E4%BD%9C%E3%82%8B%E3%83%8F%E3%83%B3%E3%83%90%E3%83%BC%E3%82%AC%E3%83%BC%E3%83%A1%E3%83%8B%E3%83%A5%E3%83%BC/",
      "url": "https://ikmnjrd.github.io/posts/CSS%E3%82%A2%E3%83%8B%E3%83%A1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%A7%E4%BD%9C%E3%82%8B%E3%83%8F%E3%83%B3%E3%83%90%E3%83%BC%E3%82%AC%E3%83%BC%E3%83%A1%E3%83%8B%E3%83%A5%E3%83%BC/",
      "title": "CSSアニメーションで作るハンバーガーメニュー",
      "content_html": "<h2 id=\"%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%E3%82%B3%E3%83%BC%E3%83%89\">サンプルコード <a class=\"direct-link\" href=\"#%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%E3%82%B3%E3%83%BC%E3%83%89\">#</a></h2>\n<p class=\"codepen\" data-height=\"300\" data-default-tab=\"html,result\" data-slug-hash=\"RwLeEOj\" data-user=\"ikmnjrd\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https://codepen.io/ikmnjrd/pen/RwLeEOj\">\n  CSS-hamburger</a> by ike (<a href=\"https://codepen.io/ikmnjrd\">@ikmnjrd</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n<h3 id=\"%E9%87%8D%E8%A6%81%E3%81%AA%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88\">重要なポイント <a class=\"direct-link\" href=\"#%E9%87%8D%E8%A6%81%E3%81%AA%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88\">#</a></h3>\n<h4 id=\"css%E3%83%97%E3%83%AD%E3%83%91%E3%83%86%E3%82%A3\">CSSプロパティ <a class=\"direct-link\" href=\"#css%E3%83%97%E3%83%AD%E3%83%91%E3%83%86%E3%82%A3\">#</a></h4>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">background</span><span class=\"token punctuation\">:</span> currentColor<span class=\"token punctuation\">;</span></code></pre>\n<p>参考:<a href=\"https://zenn.dev/phi/articles/css-tips-currentcolor\">https://zenn.dev/phi/articles/css-tips-currentcolor</a></p>\n<h4 id=\"%E3%82%A2%E3%83%8B%E3%83%A1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E3%82%A4%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0\">アニメーションのイージング <a class=\"direct-link\" href=\"#%E3%82%A2%E3%83%8B%E3%83%A1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E3%82%A4%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0\">#</a></h4>\n<ul>\n<li><code>cubic-bezier</code>\n<ul>\n<li><a href=\"https://qiita.com/96usa_koi/items/6f313f1d664806a77313\">cubic-bezier を知る。</a></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"%E3%82%A2%E3%83%8B%E3%83%A1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3\">アニメーション <a class=\"direct-link\" href=\"#%E3%82%A2%E3%83%8B%E3%83%A1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3\">#</a></h4>\n<p>座標変換の原点を設定する<code>transform-origin</code></p>\n<h4 id=\"wai-aria\">WAI-ARIA <a class=\"direct-link\" href=\"#wai-aria\">#</a></h4>\n<p>aria-expanded=&quot;false&quot;</p>\n",
      "date_published": "2022-01-12T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/SVG%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3%E3%82%92%E9%85%8D%E5%B8%83%E3%81%97%E3%81%A6%E3%81%84%E3%82%8BWeb%E3%82%B5%E3%82%A4%E3%83%88/",
      "url": "https://ikmnjrd.github.io/posts/SVG%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3%E3%82%92%E9%85%8D%E5%B8%83%E3%81%97%E3%81%A6%E3%81%84%E3%82%8BWeb%E3%82%B5%E3%82%A4%E3%83%88/",
      "title": "SVGアイコンを配布しているWebサイト",
      "content_html": "<h2 id=\"svg%E3%81%A8%E3%81%AF\"><strong>SVGとは</strong> <a class=\"direct-link\" href=\"#svg%E3%81%A8%E3%81%AF\">#</a></h2>\n<p>Scalable Vector Graphics</p>\n<h3 id=\"svg%E3%81%AE%E7%B6%B2%E7%BE%85%E7%9A%84%E3%81%AA%E8%AA%AC%E6%98%8E\">SVGの網羅的な説明 <a class=\"direct-link\" href=\"#svg%E3%81%AE%E7%B6%B2%E7%BE%85%E7%9A%84%E3%81%AA%E8%AA%AC%E6%98%8E\">#</a></h3>\n<p><a href=\"https://www.webdesignleaves.com/pr/html/svg_basic.html\">https://www.webdesignleaves.com/pr/html/svg_basic.html</a></p>\n<h3 id=\"svg%E3%81%AE%E3%83%99%E3%82%B9%E3%83%88%E3%83%97%E3%83%A9%E3%82%AF%E3%83%86%E3%82%A3%E3%82%B9%E7%9A%84%E3%81%AA%E8%AA%AC%E6%98%8E\">SVGのベストプラクティス的な説明 <a class=\"direct-link\" href=\"#svg%E3%81%AE%E3%83%99%E3%82%B9%E3%83%88%E3%83%97%E3%83%A9%E3%82%AF%E3%83%86%E3%82%A3%E3%82%B9%E7%9A%84%E3%81%AA%E8%AA%AC%E6%98%8E\">#</a></h3>\n<p><a href=\"https://design.dena.com/engineering/svg-sprite\">https://design.dena.com/engineering/svg-sprite</a></p>\n<h2 id=\"%E4%BE%BF%E5%88%A9%E3%81%AA%E7%B4%A0%E6%9D%90\"><strong>便利な素材</strong> <a class=\"direct-link\" href=\"#%E4%BE%BF%E5%88%A9%E3%81%AA%E7%B4%A0%E6%9D%90\">#</a></h2>\n<ul>\n<li><a href=\"https://devicon.dev/\">https://devicon.dev/</a>\n<ul>\n<li>MITライセンス</li>\n</ul>\n</li>\n<li><a href=\"https://svgporn.com/\">https://svgporn.com/</a>\n<ul>\n<li>CC0 1.0 Universal</li>\n</ul>\n</li>\n<li><a href=\"https://fonts.google.com/icons?selected=Material+Icons\">https://fonts.google.com/icons?selected=Material+Icons</a>\n<ul>\n<li>APACHE LICENSE, VERSION 2.0</li>\n</ul>\n</li>\n</ul>\n",
      "date_published": "2022-01-11T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/Google%20Cloud%20Run%E3%81%A7%E5%8B%95%E3%81%8B%E3%81%99%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92RDB%E3%81%AB%E6%8E%A5%E7%B6%9A%E3%81%97%E3%81%9F%E9%9A%9B%E3%81%AE%E6%96%99%E9%87%91%E3%82%92%E8%80%83%E3%81%88%E3%82%8B/",
      "url": "https://ikmnjrd.github.io/posts/Google%20Cloud%20Run%E3%81%A7%E5%8B%95%E3%81%8B%E3%81%99%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92RDB%E3%81%AB%E6%8E%A5%E7%B6%9A%E3%81%97%E3%81%9F%E9%9A%9B%E3%81%AE%E6%96%99%E9%87%91%E3%82%92%E8%80%83%E3%81%88%E3%82%8B/",
      "title": "Google Cloud Runで動かすアプリをRDBに接続した際の料金を考える",
      "content_html": "<p>Googleが提供してくれているCloud Runは便利ですよね。私は普段Reactでクライアント側を触っていてFirebaseで済ませることが多いのですが、Cloud Runの便利さに感化されてRDBも使いたくなりました。（FirebaseはNoSQLしか提供してくれていないので...）</p>\n<p>しかしへっぽこアプリに使うにはいかんせん料金が気になったところで、予想よりも今回の用途には高級すぎました。今回の判断の元になった部分をまとめます。</p>\n<p>自称へっぽこアプリへの、想定されるトラフィックとしては1日に1件リクエストがあるかといったレベルのものを想定して話を進めます。</p>\n<p>まず第一にCloud Runを使用する。そこにクラウドサービスを利用してRDBを接続したい。<br>\nそうなった時の候補は、次の2つで、こちらの料金を概算していきます。</p>\n<ol>\n<li>Cloud Run と Cloud SQL</li>\n<li>Cloud RunにホストしたAPIサーバーをVPS上のDBサーバーに繋ぐ</li>\n</ol>\n<h3 id=\"%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A0%85\">注意事項 <a class=\"direct-link\" href=\"#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A0%85\">#</a></h3>\n<p>1$=100円で計算しています。</p>\n<p>料金は全て東京リージョンで計算しています。</p>\n<h2 id=\"1.-cloud-sql%E3%81%AE%E6%96%99%E9%87%91\"><strong>1. Cloud SQLの料金</strong> <a class=\"direct-link\" href=\"#1.-cloud-sql%E3%81%AE%E6%96%99%E9%87%91\">#</a></h2>\n<p>1ヶ月あたり800円。</p>\n<h4 id=\"%E5%86%85%E8%A8%B3\">内訳 <a class=\"direct-link\" href=\"#%E5%86%85%E8%A8%B3\">#</a></h4>\n<ol>\n<li>ストレージとネットワークの料金\n<ul>\n<li>SSD ストレージ容量: 1 GB あたり $0.221/月</li>\n<li>HDD ストレージ容量: 1 GB あたり $0.117/月</li>\n</ul>\n</li>\n<li>ネットワーク下り（外向き）の料金\n<ul>\n<li>送信先 Google プロダクトであれば大陸内は無料</li>\n<li>インターネット下り（外向き、Cloud Interconnect を使用する場合）は$0.05/GB</li>\n<li>インターネット下り（外向き、Cloud Interconnect を使用しない場合）は$0.19/GB</li>\n</ul>\n</li>\n<li>インスタンスの料金</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">共有コア マシンタイプ</th>\n<th style=\"text-align:left\">仮想 CPU 数</th>\n<th style=\"text-align:left\">RAM（GB）</th>\n<th style=\"text-align:left\">最大ストレージ容量</th>\n<th style=\"text-align:left\">1ヶ月あたりの料金（米ドル）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">db-f1-micro</td>\n<td style=\"text-align:left\">共有</td>\n<td style=\"text-align:left\">0.6</td>\n<td style=\"text-align:left\">3,062 GB</td>\n<td style=\"text-align:left\">$7.67</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">db-g1-small</td>\n<td style=\"text-align:left\">共有</td>\n<td style=\"text-align:left\">1.7</td>\n<td style=\"text-align:left\">3,062 GB</td>\n<td style=\"text-align:left\">$25.55</td>\n</tr>\n</tbody>\n</table>\n<p>CloudFunctionsで停止と起動をスケジューリングしてことを解説している<a href=\"https://cloud.google.com/blog/ja/topics/developers-practitioners/lower-development-costs-schedule-cloud-sql-instances-start-and-stop\">Google Cloudのブログ</a>もあります。</p>\n<h2 id=\"2.-%E4%BB%96%E7%A4%BEvps%E3%81%ABdb%E3%82%B5%E3%83%BC%E3%83%90%E3%82%92%E5%BB%BA%E3%81%A6%E6%8E%A5%E7%B6%9A\"><strong>2. 他社VPSにDBサーバを建て接続</strong> <a class=\"direct-link\" href=\"#2.-%E4%BB%96%E7%A4%BEvps%E3%81%ABdb%E3%82%B5%E3%83%BC%E3%83%90%E3%82%92%E5%BB%BA%E3%81%A6%E6%8E%A5%E7%B6%9A\">#</a></h2>\n<p>必要なもの(料金計算対象)</p>\n<ul>\n<li>VPS(今回はConoHa)</li>\n<li>Cloud NAT</li>\n<li>静的IPアドレス</li>\n</ul>\n<h3 id=\"conoha%E3%81%AEvps%E3%81%AE%E6%96%99%E9%87%91\"><strong>ConoHaのVPSの料金</strong> <a class=\"direct-link\" href=\"#conoha%E3%81%AEvps%E3%81%AE%E6%96%99%E9%87%91\">#</a></h3>\n<p>1ヶ月あたり682円</p>\n<p>メモリ: 512MB、<br>\nCPU: 1コア、<br>\nSSD: 30GB</p>\n<h3 id=\"cloud-nat%E3%81%AE%E6%96%99%E9%87%91\"><strong>Cloud NATの料金</strong> <a class=\"direct-link\" href=\"#cloud-nat%E3%81%AE%E6%96%99%E9%87%91\">#</a></h3>\n<p>1ヶ月あたり数円</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">割り当てられている VM インスタンスの数</th>\n<th style=\"text-align:left\">1 時間あたりの料金</th>\n<th style=\"text-align:left\">処理された 1 GB あたりの料金（下りと上り（外向きと内向き）の両方）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">32 VM インスタンスまで</td>\n<td style=\"text-align:left\">$0.0014 × ゲートウェイを使用している VM インスタンスの数</td>\n<td style=\"text-align:left\">$0.045</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">32 VM インスタンスを超える場合</td>\n<td style=\"text-align:left\">$0.044</td>\n<td style=\"text-align:left\">$0.045</td>\n</tr>\n</tbody>\n</table>\n<p>参考：<a href=\"https://cloud.google.com/nat/pricing?hl=ja\">https://cloud.google.com/nat/pricing?hl=ja</a></p>\n<h3 id=\"%E9%9D%99%E7%9A%84ip%E3%82%A2%E3%83%89%E3%83%AC%E3%82%B9\"><strong>静的IPアドレス</strong> <a class=\"direct-link\" href=\"#%E9%9D%99%E7%9A%84ip%E3%82%A2%E3%83%89%E3%83%AC%E3%82%B9\">#</a></h3>\n<p>1ヶ月あたり1,080円</p>\n<p>静的IPアドレス（割り当て済み、未使用）\t1時間あたり$0.015</p>\n<p>参考:<a href=\"https://cloud.google.com/compute/all-pricing#ipaddress\">https://cloud.google.com/compute/all-pricing#ipaddress</a></p>\n<h3 id=\"%E3%81%9D%E3%81%AE%E4%BB%96%E5%8F%82%E8%80%83\">その他参考 <a class=\"direct-link\" href=\"#%E3%81%9D%E3%81%AE%E4%BB%96%E5%8F%82%E8%80%83\">#</a></h3>\n<ul>\n<li><a href=\"https://cloud.google.com/run/docs/configuring/static-outbound-ip?hl=ja\">https://cloud.google.com/run/docs/configuring/static-outbound-ip</a></li>\n</ul>\n",
      "date_published": "2022-01-10T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/%E3%82%88%E3%81%8F%E4%BD%BF%E3%81%86gcloud%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/",
      "url": "https://ikmnjrd.github.io/posts/%E3%82%88%E3%81%8F%E4%BD%BF%E3%81%86gcloud%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/",
      "title": "よく使うgcloudコマンド",
      "content_html": "<p>主にCloudRun周辺の。すごく個人的なまとめです。</p>\n<h2 id=\"%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89\">コマンド <a class=\"direct-link\" href=\"#%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89\">#</a></h2>\n<h3 id=\"%E4%B8%80%E8%88%AC%E6%9E%A0\">一般枠 <a class=\"direct-link\" href=\"#%E4%B8%80%E8%88%AC%E6%9E%A0\">#</a></h3>\n<ul>\n<li><code>gcloud --help</code></li>\n<li><code>gcloud config --help</code></li>\n<li><code>gcloud config configurations list</code></li>\n<li><code>gcloud config configurations create &lt;configuration-name&gt;</code></li>\n<li><code>gcloud config configurations activate &lt;configuration-name&gt;</code></li>\n<li><code>gcloud projects list</code></li>\n<li><code>gcloud config set project &lt;your-project-id&gt;</code></li>\n<li><code>gcloud config set project &lt;project-name&gt;</code></li>\n<li><code>gcloud projects create &lt;you-project-id&gt; --name &lt;your-project-name&gt;</code></li>\n</ul>\n<h3 id=\"cloud-build%E3%81%A8artifact-registry%E3%81%A8cloud-run\">Cloud BuildとArtifact RegistryとCloud Run <a class=\"direct-link\" href=\"#cloud-build%E3%81%A8artifact-registry%E3%81%A8cloud-run\">#</a></h3>\n<ul>\n<li><code>gcloud services enable  artifactregistry.googleapis.com cloudbuild.googleapis.com</code></li>\n<li><code>gcloud artifacts repositories list</code></li>\n<li><code> gcloud artifacts repositories create &lt;repository-name&gt; --repository-format=docker --location=asia-northeast1 --description=&quot;Docker repository hoge&quot;</code></li>\n<li><code>gcloud builds submit --tag asia-northeast1-docker.pkg.dev/&lt;you-project-id&gt;/&lt;repository-name&gt;/&lt;image-name&gt;:tag1</code></li>\n<li><code>gcloud run deploy &lt;service-name&gt; --image asia-northeast1-docker.pkg.dev/&lt;you-project-id&gt;/&lt;repository-name&gt;/&lt;image-name&gt;:tag1 --region asia-northeast1 --platform managed --allow-unauthenticated</code></li>\n</ul>\n<h3 id=\"%E3%81%9D%E3%81%AE%E4%BB%96%E3%83%A1%E3%83%A2\">その他メモ <a class=\"direct-link\" href=\"#%E3%81%9D%E3%81%AE%E4%BB%96%E3%83%A1%E3%83%A2\">#</a></h3>\n<ul>\n<li><code>gcloud builds submit</code>時にカレントディレクトリのDockerfileがアップロードされてビルドされるものだと思ってたけど、<a href=\"https://cloud.google.com/sdk/gcloud/reference/builds/submit\">公式ドキュメント</a>を見てもそうは書いてない？とりあえずカレントディレクトリの</li>\n<li>Cloud Runがデフォルトで外部接続に使うポートは8080ってまじ？</li>\n</ul>\n",
      "date_published": "2022-01-09T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/story-book-builder-vite/",
      "url": "https://ikmnjrd.github.io/posts/story-book-builder-vite/",
      "title": "storybook-builder-viteを使ってみる",
      "content_html": "<p>使ってみたら使用感的にとてもよかった。<br>\nただ、<br>\n<a href=\"(https://github.com/eirslett/storybook-builder-vite#getting-started-with-react-vite-and-storybook-on-a-new-project)\">Getting started with React, Vite and Storybook (on a new project)</a>の中で紹介されていた<code>@vitejs/app</code>がdeprecatedだったので、修正したものを紹介する。</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> init vite@latest vite-react-app -- --template react-ts <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> vite-react-app<br><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token comment\"># or yarn</span><br>npx sb@next init --builder storybook-builder-vite <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">npm</span> run storybook</code></pre>\n<p>関係ないが、<a href=\"https://github.com/vitejs/awesome-vite#templates\">viteの公式テンプレート集</a>などもあるのでこれから参考にバイトライフをEnjoyしようと思います</p>\n<h3 id=\"%E5%8F%82%E8%80%83\">参考 <a class=\"direct-link\" href=\"#%E5%8F%82%E8%80%83\">#</a></h3>\n<ul>\n<li><a href=\"https://github.com/eirslett/storybook-builder-vite#getting-started-with-react-vite-and-storybook-on-a-new-project\">https://github.com/eirslett/storybook-builder-vite#getting-started-with-react-vite-and-storybook-on-a-new-project</a></li>\n<li><a href=\"https://vitejs.dev/guide/#scaffolding-your-first-vite-project\">https://vitejs.dev/guide/#scaffolding-your-first-vite-project</a></li>\n<li><a href=\"https://github.com/vitejs/awesome-vite#templates\">https://github.com/vitejs/awesome-vite#templates</a></li>\n</ul>\n",
      "date_published": "2022-01-09T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/V8%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%B3%E5%8F%82%E8%80%83/",
      "url": "https://ikmnjrd.github.io/posts/V8%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%B3%E5%8F%82%E8%80%83/",
      "title": "V8エンジン（JavaScript）が吐くアセンブリを見たい！",
      "content_html": "<p>アセンブリを読みたい願望がある。<br>\nnodeでもV8エンジンの<code>--print-code</code>オプションが使える。</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ node --print-code sample.js<br>$ d8 --print-code sample.js</code></pre>\n<p>実際に出力してみたけど、自分で書いたコード部分すら見つからず、わけわからんかった。<br>\n（Raw Codeとして出力されると紹介されていたが、見当たらなかった。）</p>\n<h3 id=\"%E5%8F%82%E8%80%83\">参考 <a class=\"direct-link\" href=\"#%E5%8F%82%E8%80%83\">#</a></h3>\n<ul>\n<li><a href=\"https://zenn.dev/umashiba/articles/d64fb62a09fb4f\">v8でjsとwasmのアセンブリを取る方法</a></li>\n<li><a href=\"https://github.com/v8/v8\">GitHubの公式ミラーリポジトリ</a></li>\n<li><a href=\"https://chromium.googlesource.com/v8/v8.git\">公式Gitリポジトリ</a></li>\n<li><a href=\"https://v8.dev/docs\">https://v8.dev/docs</a></li>\n</ul>\n",
      "date_published": "2022-01-09T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/%E7%96%91%E5%95%8F_Jest%E3%81%A7ECMAScript%E3%82%92%E4%BD%BF%E3%81%86/",
      "url": "https://ikmnjrd.github.io/posts/%E7%96%91%E5%95%8F_Jest%E3%81%A7ECMAScript%E3%82%92%E4%BD%BF%E3%81%86/",
      "title": "疑問メモ_JestでECMAScriptを使う",
      "content_html": "<h3 id=\"%E7%96%91%E5%95%8F\">疑問 <a class=\"direct-link\" href=\"#%E7%96%91%E5%95%8F\">#</a></h3>\n<p>JestでECMAScriptを使う方法が<a href=\"https://jestjs.io/ja/docs/ecmascript-modules\">公式</a>に書いてある。<br>\nやってみたけどなぜかできなかったというメモ。</p>\n<p>公式通りにやってみた結果以下のエラー。</p>\n<h3 id=\"%E3%82%A8%E3%83%A9%E3%83%BC%E5%85%A8%E6%96%87\">エラー全文 <a class=\"direct-link\" href=\"#%E3%82%A8%E3%83%A9%E3%83%BC%E5%85%A8%E6%96%87\">#</a></h3>\n<pre class=\"language-bash\"><code class=\"language-bash\">% node --experimental-vm-modules node_modules/jest/bin/jest.js<br><span class=\"token punctuation\">(</span>node:92238<span class=\"token punctuation\">)</span> ExperimentalWarning: VM Modules is an experimental feature. This feature could change at any <span class=\"token function\">time</span><br><span class=\"token punctuation\">(</span>Use <span class=\"token variable\"><span class=\"token variable\">`</span>node --trace-warnings <span class=\"token punctuation\">..</span>.<span class=\"token variable\">`</span></span> to show where the warning was created<span class=\"token punctuation\">)</span><br> FAIL  ./index.test.js<br>  ● Test suite failed to run<br><br>    Jest encountered an unexpected token<br><br>    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.<br><br>    Out of the box Jest supports Babel, <span class=\"token function\">which</span> will be used to transform your files into valid JS based on your Babel configuration.<br><br>    By default <span class=\"token string\">\"node_modules\"</span> folder is ignored by transformers.<br><br>    Here<span class=\"token string\">'s what you can do:<br>     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.<br>     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript<br>     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.<br>     • If you need a custom transformation specify a \"transform\" option in your config.<br>     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.<br><br>    You'</span>ll <span class=\"token function\">find</span> <span class=\"token function\">more</span> details and examples of these config options <span class=\"token keyword\">in</span> the docs:<br>    https://jestjs.io/docs/configuration<br>    For information about custom transformations, see:<br>    https://jestjs.io/docs/code-transformation<br><br>    Details:<br><br>    /Users/ike/workspace/no-degradation-image-converter/index.test.js:1<br>    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"Object.&lt;anonymous>\"</span>:function<span class=\"token punctuation\">(</span>module,exports,require,__dirname,__filename,jest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>import <span class=\"token function\">sum</span> from <span class=\"token string\">'./index'</span><span class=\"token punctuation\">;</span><br>                                                                                      ^^^^^^<br><br>    SyntaxError: Cannot use <span class=\"token function\">import</span> statement outside a module<br><br>      at Runtime.createScriptFromCode <span class=\"token punctuation\">(</span>node_modules/jest-runtime/build/index.js:1728:14<span class=\"token punctuation\">)</span><br>      at TestScheduler.scheduleTests <span class=\"token punctuation\">(</span>node_modules/@jest/core/build/TestScheduler.js:333:13<span class=\"token punctuation\">)</span><br><br>Test Suites: <span class=\"token number\">1</span> failed, <span class=\"token number\">1</span> total<br>Tests:       <span class=\"token number\">0</span> total<br>Snapshots:   <span class=\"token number\">0</span> total<br>Time:        <span class=\"token number\">0.222</span> s</code></pre>\n<h3 id=\"%E3%82%8F%E3%81%8B%E3%82%89%E3%81%AA%E3%81%84%E3%81%93%E3%81%A8%E3%82%92%E8%BE%BF%E3%82%8B\">わからないことを辿る <a class=\"direct-link\" href=\"#%E3%82%8F%E3%81%8B%E3%82%89%E3%81%AA%E3%81%84%E3%81%93%E3%81%A8%E3%82%92%E8%BE%BF%E3%82%8B\">#</a></h3>\n<p>そもそも実行時に付与してるオプションは、<a href=\"(https://nodejs.org/api/cli.html#--experimental-vm-modules)\">Node.js</a>のサイトでこのように説明されている。</p>\n<blockquote>\n<p>--experimental-vm-module<br>\nEnable experimental ES Module support in the vm module.</p>\n</blockquote>\n<p>とてもあっさり！</p>\n<p><code>vm module</code>とはなんぞ？<br>\n要はV8エンジンらしい。以下公式での<a href=\"https://nodejs.org/api/vm.html#vm-executing-javascript\">Node.jsのサイト</a>での説明</p>\n<blockquote>\n<p>The vm module enables compiling and running code within V8 Virtual Machine contexts. The vm module is not a security mechanism. Do not use it to run untrusted code.</p>\n</blockquote>\n<p>そして迷宮入り。Nodeを16の最新安定版にしてみたけどダメでしたね。<br>\n大人しくCommonJSでrequireします。</p>\n<h3 id=\"%E5%91%A8%E8%BE%BA%E7%94%A8%E8%AA%9E\">周辺用語 <a class=\"direct-link\" href=\"#%E5%91%A8%E8%BE%BA%E7%94%A8%E8%AA%9E\">#</a></h3>\n<ul>\n<li>Node.js</li>\n<li>V8</li>\n<li>VM moduel</li>\n<li>CommonJS</li>\n<li>ECMAScript</li>\n</ul>\n<h3 id=\"%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">参考文献 <a class=\"direct-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">#</a></h3>\n<ul>\n<li><a href=\"https://nodejs.org/api/cli.html#--experimental-vm-modules\">--experimental-vm-module</a></li>\n<li><a href=\"https://nodejs.org/api/vm.html#vm-executing-javascript\">(https://nodejs.org/api/vm.html#vm-executing-javascript)</a></li>\n<li><a href=\"https://nodejs.org/api/vm.html#vm-executing-javascript\">https://nodejs.org/api/vm.html#vm-executing-javascript</a></li>\n</ul>\n",
      "date_published": "2022-01-07T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/%E5%80%8B%E4%BA%BA%E7%9A%84%E6%8A%80%E8%A1%93%E9%81%B8%E5%AE%9A%E3%81%AB%E9%96%A2%E3%81%99%E3%82%8B%E5%9F%BA%E6%BA%96%E7%89%A9%E8%AA%9E/",
      "url": "https://ikmnjrd.github.io/posts/%E5%80%8B%E4%BA%BA%E7%9A%84%E6%8A%80%E8%A1%93%E9%81%B8%E5%AE%9A%E3%81%AB%E9%96%A2%E3%81%99%E3%82%8B%E5%9F%BA%E6%BA%96%E7%89%A9%E8%AA%9E/",
      "title": "へっぽこエンジニアの技術選定時の頭の中",
      "content_html": "<p>私は2020年12月からWebエンジニアとして働いている小市民です。</p>\n<h2 id=\"2022%2F1\">2022/1 <a class=\"direct-link\" href=\"#2022%2F1\">#</a></h2>\n<p>世の中のフロントエンドプロジェクトではstorybookなるものが使われているらしいな...<br>\nとりあえず神ツールであるReactとWebpackで使ってみるとするか...<br>\n最新のWebpack5だとWebpack4-&gt;5からの破壊的変更のせいでstorybookがそのまま使えないだと？！！バッチが配布されているらしいが...<br>\nじゃあWebpackではなく何やら爆速と話題のesbuildは、、、cssをインポートできないというブログがちらほら...？</p>\n<p><a href=\"https://esbuild.github.io/content-types/#css-from-js\">公式</a>によると、CSSモジュールとしてのインポートはまだできないって書いてある。</p>\n<blockquote>\n<p>You can also import CSS from JavaScript. When you do this, esbuild will gather all CSS files referenced from a given entry point and bundle it into a sibling CSS output file next to the JavaScript output file for that JavaScript entry point. So if esbuild generates app.js it would also generate app.css containing all CSS files referenced by app.js. Here's an example of importing a CSS file from JavaScript:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token string\">'./button.css'</span><br><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">Button</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> text <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><br> <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"button\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>text<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></code></pre>\n<p>Note that esbuild doesn't yet support CSS modules, so the set of export names from a CSS file is currently always empty. Supporting a basic form of CSS modules is on the roadmap.</p>\n</blockquote>\n<p>ふーん。とりあえずstorybookとviteをインストールして...ん？<br>\n今webpackって見えたような...webpackいるな...</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>何かいいの見つかればな〜<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><br>  （<span class=\"token operator\">...</span>GitHubで「storybook vite」で検索）<br>  （<span class=\"token operator\">...</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token operator\">...</span>😣）<br><span class=\"token punctuation\">}</span></code></pre>\n<p>この文章はなんの役に立つんですかね？（疑問）</p>\n",
      "date_published": "2022-01-07T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/%E7%96%91%E5%95%8F_cosole%E3%82%92%E3%82%BD%E3%83%BC%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AB%E6%AE%8B%E3%81%97%E3%81%A6%E3%81%8A%E3%81%8F%E3%81%93%E3%81%A8%E3%81%AE%E3%83%A1%E3%83%A2%E3%83%AA%E3%81%B8%E3%81%AE%E5%BD%B1%E9%9F%BF%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/",
      "url": "https://ikmnjrd.github.io/posts/%E7%96%91%E5%95%8F_cosole%E3%82%92%E3%82%BD%E3%83%BC%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AB%E6%AE%8B%E3%81%97%E3%81%A6%E3%81%8A%E3%81%8F%E3%81%93%E3%81%A8%E3%81%AE%E3%83%A1%E3%83%A2%E3%83%AA%E3%81%B8%E3%81%AE%E5%BD%B1%E9%9F%BF%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/",
      "title": "疑問メモ_cosole.logをソースコードに残しておくことのメモリへの影響について",
      "content_html": "<h3 id=\"%E7%96%91%E5%95%8F\">疑問 <a class=\"direct-link\" href=\"#%E7%96%91%E5%95%8F\">#</a></h3>\n<p>console.logの上書きで本番環境はデバッグメッセージを表示させないという技を知ったが、これがメモリに影響ないのかどうか知りたい。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">log</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre>\n<p>ちなみに最近ディベロッパーツールでメモリーのスナップショットを撮るという技を知った。</p>\n<p>Create React Appで適当に作ったプロジェクトで適当にconsole.logを出力してみた。<br>\n<img src=\"https://i.gyazo.com/f55499b3db011a5c81d04c58d71b089b.png\" alt=\"ソース\"></p>\n<p><code>console.log</code>の呼び出しを増やしてブラウザを更新-&gt;HEAP Snapshot取得すると<code>console.log</code>の呼び出し回数に応じてメモリ使用量が一見増えるように見えたが、しばらく放置して再びHEAP Snapshotを取得するとメモリ使用量が低水準にまで戻る。GCに回収されたのかな？と想像したが、よくわからない。<br>\n<img src=\"https://i.gyazo.com/1ef68f7e017d8ed2309a6ff90d9036ad.png\" alt=\"メモリ\"></p>\n<h3 id=\"%E5%91%A8%E8%BE%BA%E7%94%A8%E8%AA%9E\">周辺用語 <a class=\"direct-link\" href=\"#%E5%91%A8%E8%BE%BA%E7%94%A8%E8%AA%9E\">#</a></h3>\n<ul>\n<li></li>\n</ul>\n<h3 id=\"%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">参考文献 <a class=\"direct-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">#</a></h3>\n<ul>\n<li><a href=\"\"></a></li>\n</ul>\n",
      "date_published": "2022-01-05T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/Webpack%E3%81%A7Buffer%EF%BC%88Node.js%EF%BC%89%E3%82%92%E4%BD%BF%E3%81%86/",
      "url": "https://ikmnjrd.github.io/posts/Webpack%E3%81%A7Buffer%EF%BC%88Node.js%EF%BC%89%E3%82%92%E4%BD%BF%E3%81%86/",
      "title": "WebpackでBuffer（Node.js）を使う",
      "content_html": "<p>駆け出しエンジニアのふわっとした理解を書く。<br>\nNode.jsのコアモジュールであるBuffer()をフロント側で使いたいときがあるらしい。<a href=\"https://github.com/CyberAgentHack/web-speed-hackathon-2021/blob/135468cc9f69f6f27ba0bc9d3b74d60f1ebe3a40/client/src/components/foundation/CoveredImage/CoveredImage.jsx#L21-L23\">参考の該当箇所</a>（パフォーマンスチューニングを行う元して書かれたソースコードなので、ベストプラクティス的ではないのかもしれないが、初心者の私には判断つきません）</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> imageSize <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">return</span> data <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token function\">sizeOf</span><span class=\"token punctuation\">(</span>Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h3 id=\"%E8%A7%A3%E6%B1%BA%E7%AD%96\">解決策 <a class=\"direct-link\" href=\"#%E8%A7%A3%E6%B1%BA%E7%AD%96\">#</a></h3>\n<p>解決策(といっても、元々のソースコードに書かれていたが)、下に記載する設定がないとブラウザから怒られてしまいます。</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">CoveredImage.jsx:22 Uncaught ReferenceError: Buffer is not defined</code></pre>\n<p><code>webpack.config.js</code> に以下のように追記する。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br>    <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>ProvidePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>      Buffer<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'buffer'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Buffer'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">]</span></code></pre>\n<h3 id=\"%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">参考文献 <a class=\"direct-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">#</a></h3>\n<ul>\n<li><a href=\"https://github.com/diegomura/react-pdf/issues/1029\">https://github.com/diegomura/react-pdf/issues/1029</a></li>\n<li><a href=\"https://github.com/CyberAgentHack/web-speed-hackathon-2021\">https://github.com/CyberAgentHack/web-speed-hackathon-2021</a></li>\n<li><a href=\"https://webpack.js.org/plugins/provide-plugin/\">https://webpack.js.org/plugins/provide-plugin/</a></li>\n</ul>\n",
      "date_published": "2022-01-02T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/jekyll%E3%81%A7favicon%E3%82%92%E8%A8%AD%E5%AE%9A/",
      "url": "https://ikmnjrd.github.io/posts/jekyll%E3%81%A7favicon%E3%82%92%E8%A8%AD%E5%AE%9A/",
      "title": "jekyllでfaviconを設定",
      "content_html": "<h2 id=\"%E5%89%8D%E6%8F%90\">前提 <a class=\"direct-link\" href=\"#%E5%89%8D%E6%8F%90\">#</a></h2>\n<p>私はGitHub Pagesで<a href=\"https://github.com/jekyll/minima\">Jekyll/minima</a>を利用しているので、同様な構成な方に向けた記事です。</p>\n<h2 id=\"favicon%E8%A8%AD%E5%AE%9A\">favicon設定 <a class=\"direct-link\" href=\"#favicon%E8%A8%AD%E5%AE%9A\">#</a></h2>\n<p>./includes/custom-head.htmlに以下のコードを追記</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icon<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/favicon.ico<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></code></pre>\n<p>用意したfaviconをルートディレクトリに配置。<br>\n<img src=\"https://i.gyazo.com/f1dd722b4abdecd1fa61907db9601047.png\" alt=\"リポジトリ\"></p>\n<h2 id=\"%E5%8F%82%E8%80%83%E3%81%AB%E3%81%97%E3%81%9F%E3%82%82%E3%81%AE\">参考にしたもの <a class=\"direct-link\" href=\"#%E5%8F%82%E8%80%83%E3%81%AB%E3%81%97%E3%81%9F%E3%82%82%E3%81%AE\">#</a></h2>\n<ul>\n<li><a href=\"https://zenn.dev/pacchiy/articles/e4dcd7bd29d387\">https://zenn.dev/pacchiy/articles/e4dcd7bd29d387</a></li>\n</ul>\n",
      "date_published": "2021-12-31T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/Mac%E3%81%A7%E3%81%8A%E6%89%8B%E8%BB%BDWeb%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC/",
      "url": "https://ikmnjrd.github.io/posts/Mac%E3%81%A7%E3%81%8A%E6%89%8B%E8%BB%BDWeb%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC/",
      "title": "Macでお手軽Webサーバー",
      "content_html": "<p>ただの引用メモ</p>\n<blockquote>\n<p>Mac OS X に最初からインストールされているPythonを利用</p>\n</blockquote>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> ドキュメントルートとなるフォルダ<br>$ python -m SimpleHTTPServer <span class=\"token number\">8080</span></code></pre>\n<h3 id=\"%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">参考文献 <a class=\"direct-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">#</a></h3>\n<ul>\n<li><a href=\"https://qiita.com/massie_g/items/2913066e596dae197539\">https://qiita.com/massie_g/items/2913066e596dae197539</a></li>\n</ul>\n",
      "date_published": "2021-12-30T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/JavaScript%E5%90%8D%E5%89%8D%E7%A9%BA%E9%96%93%E3%81%A7%E3%83%8F%E3%83%9E%E3%81%A3%E3%81%9F%E8%A9%B1/",
      "url": "https://ikmnjrd.github.io/posts/JavaScript%E5%90%8D%E5%89%8D%E7%A9%BA%E9%96%93%E3%81%A7%E3%83%8F%E3%83%9E%E3%81%A3%E3%81%9F%E8%A9%B1/",
      "title": "JavaScript名前空間でハマった話",
      "content_html": "<p>ハマったポイントとその解決策を書く。</p>\n<h3 id=\"%E3%83%8F%E3%83%9E%E3%81%A3%E3%81%9F%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88\">ハマったポイント <a class=\"direct-link\" href=\"#%E3%83%8F%E3%83%9E%E3%81%A3%E3%81%9F%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88\">#</a></h3>\n<p>なぜ②の箇所で変数<code>audio</code>にアクセスできてしまうの？？？？</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">init</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br><br>  <span class=\"token keyword\">const</span> upload_file <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'uploadedFile'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> audio <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'audio'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  upload_file<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    audio<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>audio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ①</span><br>    audio<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    audio<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">draw</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>audio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ②</span><br><span class=\"token punctuation\">}</span><br><br>window<span class=\"token punctuation\">.</span>onload <span class=\"token operator\">=</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br></code></pre>\n<p>output例</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>audio</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>audio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">controls</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>blob:http://localhost:8080/b691c70c-4570-4659-97d3-45577d80ec21<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>audio</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>audio</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>audio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">controls</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>blob:http://localhost:8080/b691c70c-4570-4659-97d3-45577d80ec21<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>audio</span><span class=\"token punctuation\">></span></span></code></pre>\n<h3 id=\"%E8%B5%B7%E3%81%93%E3%81%A3%E3%81%A6%E3%81%84%E3%81%9F%E3%81%93%E3%81%A8\">起こっていたこと <a class=\"direct-link\" href=\"#%E8%B5%B7%E3%81%93%E3%81%A3%E3%81%A6%E3%81%84%E3%81%9F%E3%81%93%E3%81%A8\">#</a></h3>\n<p>ググったらすぐに出てきた。</p>\n<blockquote>\n<p>タイトルの通りなんですが, HTML の DOM に指定した id はすべて同じ変数名としてグローバル変数に格納されます.<br>\n参考: <a href=\"https://zenn.dev/phi/articles/javascript-tips-dom-id-global\">https://zenn.dev/phi/articles/javascript-tips-dom-id-global</a></p>\n</blockquote>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">init</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br><br>  <span class=\"token keyword\">const</span> upload_file <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'uploadedFile'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> audio2 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'audio'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  upload_file<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    audio2<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>audio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ①</span><br>    audio2<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    audio2<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">draw</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>audio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>audio2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ②</span><br><span class=\"token punctuation\">}</span><br><br>window<span class=\"token punctuation\">.</span>onload <span class=\"token operator\">=</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>output例</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">script.js:40 <span class=\"token operator\">&lt;</span>audio <span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span>​<span class=\"token string\">\"audio\"</span> controls <span class=\"token assign-left variable\">src</span><span class=\"token operator\">=</span>​<span class=\"token string\">\"blob:​http:​/​/​localhost:​8080/​b337de48-6ba2-459b-a022-d56dae3da9d3\"</span><span class=\"token operator\">></span>​…​<span class=\"token operator\">&lt;</span>/audio<span class=\"token operator\">></span>​<br>script.js:41 Uncaught ReferenceError: audio2 is not defined<br>    at draw <span class=\"token punctuation\">(</span>script.js:41<span class=\"token punctuation\">)</span><br>    at HTMLInputElement.<span class=\"token operator\">&lt;</span>anonymous<span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>script.js:30<span class=\"token punctuation\">)</span><br>draw @ script.js:41</code></pre>\n<h3 id=\"%E8%A7%A3%E6%B1%BA%E6%A1%88\">解決案 <a class=\"direct-link\" href=\"#%E8%A7%A3%E6%B1%BA%E6%A1%88\">#</a></h3>\n<p>idは慎重に名付けしよう。</p>\n<h3 id=\"%E5%91%A8%E8%BE%BA%E7%94%A8%E8%AA%9E\">周辺用語 <a class=\"direct-link\" href=\"#%E5%91%A8%E8%BE%BA%E7%94%A8%E8%AA%9E\">#</a></h3>\n<ul>\n<li>グローバル変数</li>\n<li>DOM</li>\n</ul>\n<h3 id=\"%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">参考文献 <a class=\"direct-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">#</a></h3>\n<ul>\n<li><a href=\"https://zenn.dev/phi/articles/javascript-tips-dom-id-global\">https://zenn.dev/phi/articles/javascript-tips-dom-id-global</a></li>\n</ul>\n",
      "date_published": "2021-12-30T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/GoogleSearchConsole%E3%81%AB%E7%99%BB%E9%8C%B2/",
      "url": "https://ikmnjrd.github.io/posts/GoogleSearchConsole%E3%81%AB%E7%99%BB%E9%8C%B2/",
      "title": "GitHub Pages(Jeykyll)をGoogle Search Consoleに登録",
      "content_html": "<h2 id=\"%E5%89%8D%E6%8F%90\">前提 <a class=\"direct-link\" href=\"#%E5%89%8D%E6%8F%90\">#</a></h2>\n<p>私はGitHub Pagesで<a href=\"https://github.com/jekyll/minima\">Jekyll/minima</a>を利用しているので、同様な構成な方に向けた記事です。</p>\n<h2 id=\"%E3%82%B5%E3%82%A4%E3%83%88%E3%83%9E%E3%83%83%E3%83%97%E3%82%92%E4%BD%9C%E6%88%90\">サイトマップを作成 <a class=\"direct-link\" href=\"#%E3%82%B5%E3%82%A4%E3%83%88%E3%83%9E%E3%83%83%E3%83%97%E3%82%92%E4%BD%9C%E6%88%90\">#</a></h2>\n<p>jekyllのプラグインを利用してサイトマップを作成するため <code>_config.yml</code> に以下を記述。</p>\n<pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">plugins</span><span class=\"token punctuation\">:</span><br><span class=\"token punctuation\">-</span> jekyll<span class=\"token punctuation\">-</span>sitemap</code></pre>\n<p>作成されたサイトマップは以下のURLで確認できる。</p>\n<p><code>https://{ユーザー名}.github.io/sitemap.xml</code></p>\n<h2 id=\"gtag(google-analytics)%E3%82%92%E5%9F%8B%E3%82%81%E8%BE%BC%E3%82%80\">gtag(Google analytics)を埋め込む <a class=\"direct-link\" href=\"#gtag(google-analytics)%E3%82%92%E5%9F%8B%E3%82%81%E8%BE%BC%E3%82%80\">#</a></h2>\n<p>Google analyticsを仕込んでいることが前提になっているようなので、事前に設定を済ます。</p>\n<p>私のようにGitHub Pagesで<a href=\"https://github.com/jekyll/minima\">Jekyll/minima</a>を利用している場合<br>\n<code>_config.yml</code> に以下のような記述をする。</p>\n<pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">google_analytics</span><span class=\"token punctuation\">:</span> G<span class=\"token punctuation\">-</span>WXXXXXXXXX</code></pre>\n<h2 id=\"google-search-console%E3%81%AB%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9\">Google Search Consoleにアクセス <a class=\"direct-link\" href=\"#google-search-console%E3%81%AB%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9\">#</a></h2>\n<p><a href=\"https://search.google.com/search-console\">https://search.google.com/search-console</a>にアクセスする。</p>\n<p>サーチコンソールのロゴ下のメニューをクリックし、開いたメニューの中から「プロパティ追加」をクリック。<br>\n<img src=\"https://i.gyazo.com/dce2b95d46361ad38e873d5e5e9e9291.png\" alt=\"俯瞰図\"></p>\n<p>URLプレフィックスで自身のページ（<code>https://{ユーザー名}.github.io</code>）を入力。続行をクリック。<br>\n<img src=\"https://i.gyazo.com/2d834c38eedd04d1d42663f7dcc4a1c0.png\" alt=\"追加画面\"></p>\n<p>登録直後の画面<br>\n<img src=\"https://i.gyazo.com/c3ccc8921cac92ce03d4964cc6a78e84.png\" alt=\"登録直後\"></p>\n<h3 id=\"%E3%82%B5%E3%82%A4%E3%83%88%E3%83%9E%E3%83%83%E3%83%97%E3%82%92%E7%99%BB%E9%8C%B2\">サイトマップを登録 <a class=\"direct-link\" href=\"#%E3%82%B5%E3%82%A4%E3%83%88%E3%83%9E%E3%83%83%E3%83%97%E3%82%92%E7%99%BB%E9%8C%B2\">#</a></h3>\n<p>左側のメニューから、「インデックス」-&gt;「サイトマップ」をクリックする<br>\nサイトマップを送信する。<br>\n<img src=\"https://i.gyazo.com/e987cfaa2328b58a5b42d9d070929f48.png\" alt=\"サイトマップ登録\"></p>\n<p>サイトマップ送信直後は以下のようになる。<br>\n<img src=\"https://i.gyazo.com/eaf2aa36d0e725c9f4a01da5ef6c833f.png\" alt=\"サイトマップ送信直後\"></p>\n<p>あとは処理が完了するまで数日待ちます。</p>\n<h2 id=\"%E7%A2%BA%E8%AA%8D%EF%BC%88%E6%95%B0%E6%97%A5%E5%BE%8C%EF%BC%89\">確認（数日後） <a class=\"direct-link\" href=\"#%E7%A2%BA%E8%AA%8D%EF%BC%88%E6%95%B0%E6%97%A5%E5%BE%8C%EF%BC%89\">#</a></h2>\n<p>サマリー（検索パフォーマンス）<br>\n<img src=\"https://i.gyazo.com/70fde43f72dc84263a0f662eb5c8e4af.png\" alt=\"数日後サマリー\"></p>\n<p>サイトマップ<br>\n<img src=\"https://i.gyazo.com/175db4f4b7552d5169601a659b7ece4a.png\" alt=\"数日後サイトマップ\"></p>\n<h2 id=\"%E6%B3%A8%E6%84%8F\">注意 <a class=\"direct-link\" href=\"#%E6%B3%A8%E6%84%8F\">#</a></h2>\n<p>Google Analyticsタグの埋め込みなどは利用しているJeykllテーマによって異なる場合があります。自身の利用しているリモートテーマをしっかりと確認しましょう。</p>\n<h3 id=\"%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">参考文献 <a class=\"direct-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">#</a></h3>\n<ul>\n<li><a href=\"https://netchira.github.io/blog/githubpages/SEOsono1.html\">https://netchira.github.io/blog/githubpages/SEOsono1.html</a></li>\n<li><a href=\"https://developers.google.com/search/docs/beginner/seo-starter-guide\">https://developers.google.com/search/docs/beginner/seo-starter-guide</a></li>\n</ul>\n",
      "date_published": "2021-12-28T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/%E7%96%91%E5%95%8F_wasm%E3%81%A8V8%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%B3/",
      "url": "https://ikmnjrd.github.io/posts/%E7%96%91%E5%95%8F_wasm%E3%81%A8V8%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%B3/",
      "title": "疑問メモ_TypeScriptをネイティブコンパイル",
      "content_html": "<h3 id=\"%E7%96%91%E5%95%8F\">疑問 <a class=\"direct-link\" href=\"#%E7%96%91%E5%95%8F\">#</a></h3>\n<p>WebブラウザではV8エンジンがJavaScriptを解釈・実行するのはわかったが、JavaScriptに埋め込まれたwasm（別言語・npm）で提供されている場合もV8エンジンが同一スレッド内でwasmを解釈・実行するの？<br>\nV8がhidden classを作成して、、、</p>\n<h3 id=\"%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">参考文献 <a class=\"direct-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">#</a></h3>\n<ul>\n<li><a href=\"https://postd.cc/how-javascript-works-inside-the-v8-engine-5-tips-on-how-to-write-optimized-code/\">https://postd.cc/how-javascript-works-inside-the-v8-engine-5-tips-on-how-to-write-optimized-code/</a></li>\n</ul>\n",
      "date_published": "2021-12-26T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/%E7%96%91%E5%95%8F_eval%E3%81%8C%E9%A0%BB%E5%87%BA%E3%81%99%E3%82%8B%E3%81%AE%E3%81%AF%E3%81%AA%E3%81%9C/",
      "url": "https://ikmnjrd.github.io/posts/%E7%96%91%E5%95%8F_eval%E3%81%8C%E9%A0%BB%E5%87%BA%E3%81%99%E3%82%8B%E3%81%AE%E3%81%AF%E3%81%AA%E3%81%9C/",
      "title": "疑問メモ_evalが頻出するのはなぜ",
      "content_html": "<h3 id=\"%E7%96%91%E5%95%8F\">疑問 <a class=\"direct-link\" href=\"#%E7%96%91%E5%95%8F\">#</a></h3>\n<p>なんでWebpack?esbuild?などでトランスパイルしたjsファイルにeval(withも?みたことはないけど)が頻出するの？<br>\nMDNを見たけど、危険ってことしかわからなかった。<br>\n自分なりに考えた理由としてはevalは機械語(ネイティブコード)に近いからコンパイルが楽になると予想した。</p>\n<h3 id=\"%E8%87%AA%E5%88%86%E3%81%AA%E3%82%8A%E3%81%AE%E5%9B%9E%E7%AD%94\">自分なりの回答 <a class=\"direct-link\" href=\"#%E8%87%AA%E5%88%86%E3%81%AA%E3%82%8A%E3%81%AE%E5%9B%9E%E7%AD%94\">#</a></h3>\n<p><code>eval</code>は<a href=\"https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects\">標準組み込みオブジェクト</a>として実装されているから、と言う説</p>\n<h3 id=\"%E5%91%A8%E8%BE%BA%E7%94%A8%E8%AA%9E\">周辺用語 <a class=\"direct-link\" href=\"#%E5%91%A8%E8%BE%BA%E7%94%A8%E8%AA%9E\">#</a></h3>\n<ul>\n<li></li>\n</ul>\n<h3 id=\"%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">参考文献 <a class=\"direct-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">#</a></h3>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects\">標準組み込みオブジェクト</a></li>\n</ul>\n",
      "date_published": "2021-12-26T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/%E7%96%91%E5%95%8F_Nodejs%E3%81%A8Express%E3%81%AE%E9%81%95%E3%81%84/",
      "url": "https://ikmnjrd.github.io/posts/%E7%96%91%E5%95%8F_Nodejs%E3%81%A8Express%E3%81%AE%E9%81%95%E3%81%84/",
      "title": "疑問メモ_NodejsとExpressの違い",
      "content_html": "<h3 id=\"%E7%96%91%E5%95%8F\">疑問 <a class=\"direct-link\" href=\"#%E7%96%91%E5%95%8F\">#</a></h3>\n<p>Node.jsはnodeコマンドでWebサーバーとして立ち上がるみたいだけど、一方expressもある。<br>\nnodeコマンドで立ち上がるWebサーバーとexpressは何が違うんだ！！！！</p>\n<h3 id=\"%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">参考文献 <a class=\"direct-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\">#</a></h3>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Learn/Server-side/Express_Nodejs/Introduction\">https://developer.mozilla.org/ja/docs/Learn/Server-side/Express_Nodejs/Introduction</a></li>\n</ul>\n",
      "date_published": "2021-12-26T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/TypeScript%E3%82%92%E3%83%8D%E3%82%A4%E3%83%86%E3%82%A3%E3%83%96%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%AB/",
      "url": "https://ikmnjrd.github.io/posts/TypeScript%E3%82%92%E3%83%8D%E3%82%A4%E3%83%86%E3%82%A3%E3%83%96%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%AB/",
      "title": "TypeScriptをネイティブコンパイルするって？",
      "content_html": "<h3 id=\"%E7%96%91%E5%95%8F\">疑問 <a class=\"direct-link\" href=\"#%E7%96%91%E5%95%8F\">#</a></h3>\n<p>typescriptをjavascriptを挟まずにネイティブコードにコンパイルするようなプロジェクトはないのか？</p>\n<h3 id=\"%E8%87%AA%E5%88%86%E3%81%AA%E3%82%8A%E3%81%AE%E5%9B%9E%E7%AD%94\">自分なりの回答 <a class=\"direct-link\" href=\"#%E8%87%AA%E5%88%86%E3%81%AA%E3%82%8A%E3%81%AE%E5%9B%9E%E7%AD%94\">#</a></h3>\n<p>ないよ。</p>\n<p>DenoがTypeScriptコードをサポートしているが、中ではコンパイラが一度JavaScriptに変換している。</p>\n",
      "date_published": "2021-12-26T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/detail-test/",
      "url": "https://ikmnjrd.github.io/posts/detail-test/",
      "title": "details-test",
      "content_html": "<p>detailstタグのテスト</p>\n<details>\n  <summary>summary</summary>\ncontent\n</details>\n",
      "date_published": "2021-12-22T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/apparel-mens-hondatubasa/",
      "url": "https://ikmnjrd.github.io/posts/apparel-mens-hondatubasa/",
      "title": "本田翼コレクション（メンズおすすめ服）",
      "content_html": "<p>2021年12月21日、YouTubeで行われたLIVE配信でおすすめのアパレルブランドor古着屋として語っていたもののまとめ（語る部分は聞いていないが気付いたら配信映像の固定背景にあったもの）</p>\n<ul>\n<li>\n<p>DAIRIKU</p>\n<ul>\n<li>ダイリク</li>\n<li><a href=\"https://www.acrmtsm.jp/brands/63\">https://www.acrmtsm.jp/brands/63</a></li>\n</ul>\n</li>\n<li>\n<p>stein</p>\n<ul>\n<li>シュタイン</li>\n<li><a href=\"https://www.acrmtsm.jp/brands/28\">https://www.acrmtsm.jp/brands/28</a></li>\n</ul>\n</li>\n<li>\n<p>taupe</p>\n<ul>\n<li>トープ</li>\n<li><a href=\"https://www.taupe-japan.com/\">https://www.taupe-japan.com/</a></li>\n</ul>\n</li>\n<li>\n<p>yoke</p>\n<ul>\n<li>ヨーク</li>\n<li><a href=\"https://www.yoketokyo.com/\">https://www.yoketokyo.com/</a></li>\n<li><a href=\"https://www.acrmtsm.jp/brands/65\">https://www.acrmtsm.jp/brands/65</a></li>\n</ul>\n</li>\n<li>\n<p>AURALEE</p>\n<ul>\n<li>オーラリー</li>\n<li><a href=\"https://auralee.jp/\">https://auralee.jp/</a></li>\n<li>自社ドメインに販売サイト持ってる。えらい。</li>\n</ul>\n</li>\n<li>\n<p>JUMPIN' JAP FLASH</p>\n<ul>\n<li>古着屋</li>\n<li><a href=\"https://jumpinjap.thebase.in/\">https://jumpinjap.thebase.in/</a></li>\n<li><a href=\"https://www.instagram.com/jumpinjapflash\">https://www.instagram.com/jumpinjapflash</a></li>\n</ul>\n</li>\n<li>\n<p>Un Old Joke</p>\n<ul>\n<li>古着屋</li>\n<li><a href=\"https://unoldjoke.thebase.in/\">https://unoldjoke.thebase.in/</a></li>\n<li><a href=\"https://www.instagram.com/unoldjoke\">https://www.instagram.com/unoldjoke</a></li>\n</ul>\n</li>\n</ul>\n",
      "date_published": "2021-12-22T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/Jekyll-footer-Overrid/",
      "url": "https://ikmnjrd.github.io/posts/Jekyll-footer-Overrid/",
      "title": "Jekyllテーマのhtmlオーバーライド",
      "content_html": "<p>できるだけ楽をしてブログを続けるために仕方なくGitHub PagesでJekyllを使ってる人は僕以外にいることと思う。</p>\n<p><s>今となっては古いデザインのものが多く、好みのテーマを見つけることすらめんどくさかった。それすら古さが漂う</s></p>\n<p>せっかく見つけたテーマのうち1部分だけ気に入らない時の対処法を書く。<br>\nちなみにテーマは<a href=\"https://github.com/jekyll/minima\">minima</a>です。</p>\n<p>今回僕が気に入らなかったのが、footerにある「Subscribe」の文字部分。これを消したい。<br>\n<img src=\"https://i.gyazo.com/1c3f3779075834651e9c927a2ea096a4.png\" alt=\"feeds削除前\"></p>\n<p><a href=\"https://github.com/jekyll/minima\">minima</a>のソースコードを確認し、<code>/_incledes/footer.html</code>が気に入らなかった箇所があることを確認した。</p>\n<p><strong>自身のリポジトリ</strong>に<code>/_incledes/footer.html</code>を作成、今回はオリジナルのfooter.htmlから該当箇所を削除。</p>\n<p>以下の画像のような状態になると思います。<br>\n<img src=\"https://i.gyazo.com/aa22c02a8c6b29a6ed66c1d473d6695d.png\" alt=\"リポジトリルート\"></p>\n<p>いつも通りGitHubにpush。<br>\n消えたことが確認できました。<br>\n<img src=\"https://i.gyazo.com/1d8dc36636e96098fa0bff06abe2a31f.png\" alt=\"feed削除後\"></p>\n",
      "date_published": "2021-12-22T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/novnc-kali-linux/",
      "url": "https://ikmnjrd.github.io/posts/novnc-kali-linux/",
      "title": "kali linuxでVNCサーバーにnovncで接続する",
      "content_html": "<p><a href=\"https://www.kali.org/docs/general-use/novnc-kali-in-browser/\">公式</a>にやり方も書いてあるがこの通りだとエラーが出た。</p>\n<p><code>$ sudo apt install -y x11vnc</code></p>\n<p>以下の部分をそのまま実行するとエラーが出る。<br>\n$ x11vnc -display :0 -autoport -localhost -nopw -bg -xkb -ncache -ncache_cr-quiet -forever</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 passing arg to libvncserver: -ncache_cr-quiet<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 x11vnc version: <span class=\"token number\">0.9</span>.16 lastmod: <span class=\"token number\">2019</span>-01-05  pid: <span class=\"token number\">2173</span><br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 Using X display :0<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 rootwin: 0x764 reswin: 0x3800001 dpy: 0x1dc24970<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 <br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 ------------------ USEFUL INFORMATION ------------------<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 X DAMAGE available on display, using it <span class=\"token keyword\">for</span> polling hints.<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07   To disable this behavior use: <span class=\"token string\">'-noxdamage'</span><br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 <br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07   Most compositing window managers like <span class=\"token string\">'compiz'</span> or <span class=\"token string\">'beryl'</span><br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07   cause X DAMAGE to fail, and so you may not see any <span class=\"token function\">screen</span><br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07   updates via VNC.  Either disable <span class=\"token string\">'compiz'</span> <span class=\"token punctuation\">(</span>recommended<span class=\"token punctuation\">)</span> or<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07   supply the x11vnc <span class=\"token string\">'-noxdamage'</span> <span class=\"token builtin class-name\">command</span> line option.<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 <br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 Wireframing: -wireframe mode is <span class=\"token keyword\">in</span> effect <span class=\"token keyword\">for</span> window moves.<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07   If this yields undesired behavior <span class=\"token punctuation\">(</span>poor response, painting<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07   errors, etc<span class=\"token punctuation\">)</span> it may be disabled:<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07    - use <span class=\"token string\">'-nowf'</span> to disable wireframing completely.<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07    - use <span class=\"token string\">'-nowcr'</span> to disable the Copy Rectangle after the<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07      moved window is released <span class=\"token keyword\">in</span> the new position.<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07   Also see the -help entry <span class=\"token keyword\">for</span> tuning parameters.<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07   You can press <span class=\"token number\">3</span> Alt_L<span class=\"token string\">'s (Left \"Alt\" key) in a row to <br>31/10/2021 20:23:07   repaint the screen, also see the -fixscreen option for<br>31/10/2021 20:23:07   periodic repaints.<br>31/10/2021 20:23:07 <br>31/10/2021 20:23:07 XFIXES available on display, resetting cursor mode<br>31/10/2021 20:23:07   to: '</span>-cursor <span class=\"token function\">most</span><span class=\"token string\">'.<br>31/10/2021 20:23:07   to disable this behavior use: '</span>-cursor arrow<span class=\"token string\">'<br>31/10/2021 20:23:07   or '</span>-noxfixes<span class=\"token string\">'.<br>31/10/2021 20:23:07 using XFIXES for cursor drawing.<br>31/10/2021 20:23:07 GrabServer control via XTEST.<br>31/10/2021 20:23:07 <br>31/10/2021 20:23:07 Scroll Detection: -scrollcopyrect mode is in effect to<br>31/10/2021 20:23:07   use RECORD extension to try to detect scrolling windows<br>31/10/2021 20:23:07   (induced by either user keystroke or mouse input).<br>31/10/2021 20:23:07   If this yields undesired behavior (poor response, painting<br>31/10/2021 20:23:07   errors, etc) it may be disabled via: '</span>-noscr<span class=\"token string\">'<br>31/10/2021 20:23:07   Also see the -help entry for tuning parameters.<br>31/10/2021 20:23:07   You can press 3 Alt_L'</span>s <span class=\"token punctuation\">(</span>Left <span class=\"token string\">\"Alt\"</span> key<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> a row to <br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07   repaint the screen, also see the -fixscreen option <span class=\"token keyword\">for</span><br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07   periodic repaints.<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 <br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 Client Side Caching: -ncache mode is <span class=\"token keyword\">in</span> effect to provide<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07   client-side pixel data caching.  This speeds up<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07   iconifying/deiconifying windows, moving and raising<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07   windows, and reposting menus.  In the simple CopyRect<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07   encoding scheme used <span class=\"token punctuation\">(</span>no compression<span class=\"token punctuation\">)</span> a huge amount<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07   of extra memory <span class=\"token punctuation\">(</span><span class=\"token number\">20</span>-100MB<span class=\"token punctuation\">)</span> is used on both the server and<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07   client sides.  This mode works with any VNC viewer.<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07   However, <span class=\"token keyword\">in</span> <span class=\"token function\">most</span> you can actually see the cached pixel<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07   data by scrolling down, so you need to re-adjust its size.<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07   See http://www.karlrunge.com/x11vnc/faq.html<span class=\"token comment\">#faq-client-caching.</span><br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07   If this mode yields undesired behavior <span class=\"token punctuation\">(</span>poor response,<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07   painting errors, etc<span class=\"token punctuation\">)</span> it may be disabled via: <span class=\"token string\">'-ncache 0'</span><br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07   You can press <span class=\"token number\">3</span> Alt_L's <span class=\"token punctuation\">(</span>Left <span class=\"token string\">\"Alt\"</span> key<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> a row to <br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07   repaint the screen, also see the -fixscreen option <span class=\"token keyword\">for</span><br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07   periodic repaints.<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 X FBPM extension not supported.<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 X display is capable of DPMS.<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 --------------------------------------------------------<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 <br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 Default visual ID: 0x21<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 Read initial data from X display into framebuffer.<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 initialize_screen: fb_depth/fb_bpp/fb_Bpl <span class=\"token number\">24</span>/32/7680<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 *** unrecognized option<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> ***<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07     <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  -ncache_cr-quiet<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 For a list of options run: x11vnc -opts<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 or <span class=\"token keyword\">for</span> the full help: x11vnc -help<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 <br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 Here is a list of removed or obsolete options:<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 <br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 removed: -hints, -nohints<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 removed: -cursorposall<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 removed: -nofilexfer, now the default.<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 <br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 renamed: -old_copytile, use -onetile<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 renamed: -mouse,   use -cursor<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 renamed: -mouseX,  use -cursor X<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 renamed: -X,       use -cursor X<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 renamed: -nomouse, use -nocursor<br><span class=\"token number\">31</span>/10/2021 <span class=\"token number\">20</span>:23:07 renamed: -old_pointer, use -pointer_mode <span class=\"token number\">1</span></code></pre>\n<p>そのため以下のように実行<br>\n$ x11vnc -display :0 -autoport -localhost -nopw -bg -xkb -ncache -forever</p>\n<p>起動確認</p>\n<p><code>$ ss -antp | grep vnc</code></p>\n<pre class=\"language-bash\"><code class=\"language-bash\">LISTEN    <span class=\"token number\">0</span>         <span class=\"token number\">32</span>                <span class=\"token number\">127.0</span>.0.1:5900            <span class=\"token number\">0.0</span>.0.0:*        users:<span class=\"token variable\"><span class=\"token punctuation\">((</span>\"x11vnc\"<span class=\"token punctuation\">,</span>pid<span class=\"token operator\">=</span><span class=\"token number\">8056</span><span class=\"token punctuation\">,</span>fd<span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">))</span></span><br>LISTEN    <span class=\"token number\">0</span>         <span class=\"token number\">32</span>                    <span class=\"token punctuation\">[</span>::1<span class=\"token punctuation\">]</span>:5900               <span class=\"token punctuation\">[</span>::<span class=\"token punctuation\">]</span>:*        users:<span class=\"token variable\"><span class=\"token punctuation\">((</span>\"x11vnc\"<span class=\"token punctuation\">,</span>pid<span class=\"token operator\">=</span><span class=\"token number\">8056</span><span class=\"token punctuation\">,</span>fd<span class=\"token operator\">=</span><span class=\"token number\">9</span><span class=\"token punctuation\">))</span></span><br>kali@kali:~$</code></pre>\n<p>ここでもエラーが出る。<br>\n$ /usr/share/novnc/utils/launch.sh --listen 8081 --vnc localhost</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">Warning: could not <span class=\"token function\">find</span> self.pem<br>Using installed websockify at /usr/bin/websockify<br>Starting webserver and WebSockets proxy on port <span class=\"token number\">8081</span><br>Usage: <br>    websockify <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>source_addr:<span class=\"token punctuation\">]</span>source_port <span class=\"token punctuation\">[</span>target_addr:target_port<span class=\"token punctuation\">]</span><br>    websockify <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>source_addr:<span class=\"token punctuation\">]</span>source_port -- WRAP_COMMAND_LINE<br><br>websockify: error: Error parsing target<br>Failed to start WebSockets proxy</code></pre>\n<p><a href=\"https://github.com/novnc/noVNC/issues/1443\">novnc公式のIssue</a>でも似た症状が報告されてた。</p>\n<p><code>$ cd ~</code><br>\n<code>$ git clone https://github.com/novnc/noVNC.git</code><br>\n<code>$ cd noVnc/utils/novnc_proxy --vnc localhost:5900</code></p>\n<p>サーバー側の別のターミナルでsshを有効にする（？）<br>\n<code>$ sudo systemctl enable ssh --now</code></p>\n<p>クライアントのターミナルからポートフォワーディング。sshでログインした状態になればOK。<br>\n<code>ssh kali@192.168.0.140 -L 6080:localhost:6080</code></p>\n<p>クライアントのWebブラウザで以下のようにアクセスする。<br>\n<a href=\"http://localhost:6080/vnc.html\">http://localhost:6080/vnc.html</a></p>\n",
      "date_published": "2021-10-31T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/Jekyll-theme-on-GitHub-Pages/",
      "url": "https://ikmnjrd.github.io/posts/Jekyll-theme-on-GitHub-Pages/",
      "title": "GitHub Pagesでズボラに使えそうなJekyllのブログ用テーマ",
      "content_html": "<ul>\n<li><a href=\"https://github.com/jekyll/minima\">https://github.com/jekyll/minima</a></li>\n<li><a href=\"https://github.com/zivong/jekyll-theme-hydure\">https://github.com/zivong/jekyll-theme-hydure</a></li>\n<li><a href=\"https://github.com/huangyz0918/moving\">https://github.com/huangyz0918/moving</a></li>\n<li><a href=\"https://github.com/jekyllt/jasper\">https://github.com/jekyllt/jasper</a></li>\n<li><a href=\"https://github.com/joshgerdes/jekyll-uno\">https://github.com/joshgerdes/jekyll-uno</a></li>\n</ul>\n",
      "date_published": "2021-10-29T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/GitHub-from-https-to-ssh/",
      "url": "https://ikmnjrd.github.io/posts/GitHub-from-https-to-ssh/",
      "title": "GitHubのhttpsからSSH通信への切り替え",
      "content_html": "<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> remote -v<br>ターミナルを開いてください。<br>ワーキングディレクトリをローカルプロジェクトに変更します。<br>変更したいリモートの名前を取得するため、既存のリモート一覧を表示します。<br>$ <span class=\"token function\">git</span> remote -v<br><span class=\"token operator\">></span> origin  https://github.com/USERNAME/REPOSITORY.git <span class=\"token punctuation\">(</span>fetch<span class=\"token punctuation\">)</span><br><span class=\"token operator\">></span> origin  https://github.com/USERNAME/REPOSITORY.git <span class=\"token punctuation\">(</span>push<span class=\"token punctuation\">)</span><br><span class=\"token function\">git</span> remote set-url コマンドでリモートの URL を HTTPS から SSH に変更します。<br>$ <span class=\"token function\">git</span> remote set-url origin git@github.com:USERNAME/REPOSITORY.git<br>リモート URL が変更されたことを検証します。<br>$ <span class=\"token function\">git</span> remote -v<br><span class=\"token comment\"># Verify new remote URL</span><br><span class=\"token operator\">></span> origin  git@github.com:USERNAME/REPOSITORY.git <span class=\"token punctuation\">(</span>fetch<span class=\"token punctuation\">)</span><br><span class=\"token operator\">></span> origin  git@github.com:USERNAME/REPOSITORY.git <span class=\"token punctuation\">(</span>push<span class=\"token punctuation\">)</span></code></pre>\n<p>参考：<a href=\"https://docs.github.com/ja/get-started/getting-started-with-git/managing-remote-repositories\">公式サイト</a></p>\n",
      "date_published": "2021-10-29T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/docker-firebase/",
      "url": "https://ikmnjrd.github.io/posts/docker-firebase/",
      "title": "DockerとFirebaseで作るReact環境構築",
      "content_html": "<h2 id=\"%E9%83%BD%E5%90%88%E3%81%AE%E3%81%84%E3%81%84docker%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%82%92%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89\">都合のいいdockerイメージをダウンロード <a class=\"direct-link\" href=\"#%E9%83%BD%E5%90%88%E3%81%AE%E3%81%84%E3%81%84docker%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%82%92%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89\">#</a></h2>\n<p><code>$ docker pull andreysenov/firebase-tools</code></p>\n<p><code>$ mkdir docker-firebase-test</code></p>\n<p>参考: <a href=\"https://hub.docker.com/r/andreysenov/firebase-tools\">https://hub.docker.com/r/andreysenov/firebase-tools</a></p>\n<h2 id=\"docker%E9%96%A2%E9%80%A3%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E4%BD%9C%E6%88%90\">Docker関連ファイルを作成 <a class=\"direct-link\" href=\"#docker%E9%96%A2%E9%80%A3%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E4%BD%9C%E6%88%90\">#</a></h2>\n<p><code>$ vi docker-compose.yml</code></p>\n<pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3.8\"</span><br><span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">web</span><span class=\"token punctuation\">:</span><br>    <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span> .<br>    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span><br>      <span class=\"token punctuation\">-</span> ./<span class=\"token punctuation\">:</span>/app <br>    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span><br>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"8000:3000\"</span><br>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"4000:4000\"</span> <span class=\"token comment\">#Emulator Suite UI</span><br>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"5000:5000\"</span> <span class=\"token comment\">#Firebase Hosting</span><br>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"5001:5001\"</span> <span class=\"token comment\">#Cloud Functions</span><br>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"8080:8080\"</span> <span class=\"token comment\">#Cloud Firestore</span><br>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"8085:8085\"</span> <span class=\"token comment\">#Cloud Pub/Sub</span><br>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"9000:9000\"</span> <span class=\"token comment\">#Realtime Database</span><br>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"9005:9005\"</span> <span class=\"token comment\">#Firebase Login</span><br>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"9099:9099\"</span> <span class=\"token comment\">#Authentication</span><br>    <br>    <span class=\"token key atrule\">tty</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><br>    <span class=\"token key atrule\">stdin_open</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></code></pre>\n<p><code>$ vi Dcokerfile</code></p>\n<pre class=\"language-docker\"><code class=\"language-docker\"><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> andreysenov/firebase-tools</span><br><span class=\"token instruction\"><span class=\"token keyword\">WORKDIR</span> /app</span></code></pre>\n<h2 id=\"%E3%83%9B%E3%82%B9%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0%E3%81%99%E3%82%8B%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E7%94%A8%E6%84%8F\">ホスティングするファイルを用意 <a class=\"direct-link\" href=\"#%E3%83%9B%E3%82%B9%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0%E3%81%99%E3%82%8B%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E7%94%A8%E6%84%8F\">#</a></h2>\n<p>今回はReactをcreate-react-appで用意<br>\nコンテナに入ってreactをインストール</p>\n<p><code>$ docker-compose build</code></p>\n<p><code>$ docker-compose up -d</code></p>\n<p><code>$ docker exec -it docker-firebase-test_web_1 sh</code></p>\n<p><code>$ cd /app</code></p>\n<p><code>$ npx create-react-app sample-app --template typescript</code></p>\n<p><code>$ exit</code></p>\n<h2 id=\"docker-compose.yml%E3%82%92%E7%B7%A8%E9%9B%86\">docker-compose.ymlを編集 <a class=\"direct-link\" href=\"#docker-compose.yml%E3%82%92%E7%B7%A8%E9%9B%86\">#</a></h2>\n<p><code>$ vi docker-compose.yml</code></p>\n<pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3.8\"</span><br><span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">web</span><span class=\"token punctuation\">:</span><br>    <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span> .<br>    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span><br>      <span class=\"token punctuation\">-</span> ./<span class=\"token punctuation\">:</span>/app <br>    <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> sh <span class=\"token punctuation\">-</span>c \"cd /app/sample<span class=\"token punctuation\">-</span>app <span class=\"token important\">&amp;&amp;</span> yarn start\"<br>    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span><br>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"8000:3000\"</span><br>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"4000:4000\"</span> <span class=\"token comment\">#Emulator Suite UI</span><br>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"5000:5000\"</span> <span class=\"token comment\">#Firebase Hosting</span><br>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"5001:5001\"</span> <span class=\"token comment\">#Cloud Functions</span><br>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"8080:8080\"</span> <span class=\"token comment\">#Cloud Firestore</span><br>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"8085:8085\"</span> <span class=\"token comment\">#Cloud Pub/Sub</span><br>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"9000:9000\"</span> <span class=\"token comment\">#Realtime Database</span><br>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"9005:9005\"</span> <span class=\"token comment\">#Firebase Login</span><br>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"9099:9099\"</span> <span class=\"token comment\">#Authentication</span><br>    <br>    <span class=\"token key atrule\">tty</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><br>    <span class=\"token key atrule\">stdin_open</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></code></pre>\n<h2 id=\"firebase%E3%81%B8%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4\">firebaseへデプロイ <a class=\"direct-link\" href=\"#firebase%E3%81%B8%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4\">#</a></h2>\n<p><code>$ docker-compose up -d</code></p>\n<p><code>$ docker exec -it docker-firebase-test_web_1 sh</code></p>\n<p><code>$ cd /app/react-ts-app</code></p>\n<p><code>$ firebase login --no-localhost</code></p>\n<p><code>$ firebase init hosting</code></p>\n<p>firebase.jsonを編集してfirebaseが公開ディレクトリをpublicディレクトリではなく、buildディレクトリを参照するように変更</p>\n<p><code>$ vi firebase.json</code></p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span><br>  <span class=\"token property\">\"hosting\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">\"public\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"ignore\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br>      <span class=\"token string\">\"firebase.json\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"**/.*\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"**/node_modules/**\"</span><br>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"rewrites\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br>      <span class=\"token punctuation\">{</span><br>        <span class=\"token property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"**\"</span><span class=\"token punctuation\">,</span><br>        <span class=\"token property\">\"destination\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/index.html\"</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">]</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p><code>$ firebase deploy</code></p>\n",
      "date_published": "2020-04-01T00:00:00-00:00"
    },{
      "id": "https://ikmnjrd.github.io/posts/react-webpack-skelton/",
      "url": "https://ikmnjrd.github.io/posts/react-webpack-skelton/",
      "title": "reactスケルトン的な",
      "content_html": "<h2 id=\"%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA\">リポジトリ <a class=\"direct-link\" href=\"#%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA\">#</a></h2>\n<p><a href=\"https://github.com/ikmnjrd/react-webpack-skelton\">https://github.com/ikmnjrd/react-webpack-skelton</a></p>\n<h2 id=\"%E6%89%8B%E9%A0%86\">手順 <a class=\"direct-link\" href=\"#%E6%89%8B%E9%A0%86\">#</a></h2>\n<p><code># npm init -y</code></p>\n<p><code># npm i -D webpack webpack-cli webpack-dev-server typescript ts-loader</code></p>\n<p>package.jsonに追記</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack\"</span><span class=\"token punctuation\">,</span><br><span class=\"token property\">\"watch\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack -w\"</span><span class=\"token punctuation\">,</span><br><span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack serve\"</span></code></pre>\n<p><code># npm i -S react react-dom react-router-dom @types/react @types/react-dom @types/react-router-dom</code></p>\n<p>tsconfig.json作成</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span><br>  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">\"sourceMap\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    <span class=\"token comment\">// TSはECMAScript 5に変換</span><br>    <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ES5\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token comment\">// TSのモジュールはES Modulesとして出力</span><br>    <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ES2015\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token comment\">// JSXの書式を有効に設定</span><br>    <span class=\"token property\">\"jsx\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"moduleResolution\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"lib\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br>      <span class=\"token string\">\"ES2020\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"DOM\"</span><br>    <span class=\"token punctuation\">]</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p><code>webpack.config.js</code> を作成</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">// モード値を production に設定すると最適化された状態で、</span><br>  <span class=\"token comment\">// development に設定するとソースマップ有効でJSファイルが出力される</span><br>  mode<span class=\"token operator\">:</span> <span class=\"token string\">\"development\"</span><span class=\"token punctuation\">,</span><br><br>  <span class=\"token comment\">// メインとなるJavaScriptファイル（エントリーポイント）</span><br>  entry<span class=\"token operator\">:</span> <span class=\"token string\">\"./src/main.tsx\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token comment\">// ファイルの出力設定</span><br>  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">//  出力ファイルのディレクトリ名</span><br>    path<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>__dirname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/dist</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span><br>    <span class=\"token comment\">// 出力ファイル名</span><br>    filename<span class=\"token operator\">:</span> <span class=\"token string\">\"main.js\"</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br>      <span class=\"token punctuation\">{</span><br>        <span class=\"token comment\">// 拡張子 .ts もしくは .tsx の場合</span><br>        test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.tsx?$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span><br>        <span class=\"token comment\">// TypeScript をコンパイルする</span><br>        use<span class=\"token operator\">:</span> <span class=\"token string\">\"ts-loader\"</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">]</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token comment\">// import 文で .ts や .tsx ファイルを解決するため</span><br>  resolve<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    extensions<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\".ts\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".tsx\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".js\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".json\"</span><span class=\"token punctuation\">]</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token comment\">// ES5(IE11等)向けの指定（webpack 5以上で必要）</span><br>  target<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"web\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"es5\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br><br>\t<span class=\"token comment\">// ローカルサーバー（webpack-dev-server）</span><br>  devServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>\t\tcontentBase<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>__dirname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/dist</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span><br>    hotOnly<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    port<span class=\"token operator\">:</span> <span class=\"token number\">8080</span><span class=\"token punctuation\">,</span><br>    host<span class=\"token operator\">:</span> <span class=\"token string\">'0.0.0.0'</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n<p><code>/src</code> 配下に  <code>main.tsx</code> を作成</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"><br>        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello React!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"><br>      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br>ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span><span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><code>/dist</code> にindex.htmlを作成</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>my-app<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>main.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n<p><a href=\"https://ics.media/entry/16329/\">https://ics.media/entry/16329/</a></p>\n<p><a href=\"https://newcss.net/\">https://newcss.net/</a></p>\n",
      "date_published": "2020-03-01T00:00:00-00:00"
    }
  ]
}
